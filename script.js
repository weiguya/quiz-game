// Supabase Configuration
const SUPABASE_URL = 'https://sfugtyqygjfdksmpcqhq.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNmdWd0eXF5Z2pmZGtzbXBjcWhxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5NTIzMDgsImV4cCI6MjA2MzUyODMwOH0.G7SrGAbd1t3mioHsXHuyHYJdHwRwrVYp1AbshRwJ6l8';
const { createClient } = supabase;
const supabaseClient = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
let categories = {
    // ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á: { "mainCategory": { "subCategory1": ["subCategory2"] } }
};

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
let questions = [];

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
let currentQuestionIndex = 0;
let userAnswers = {};
let randomQuestionOrder = [];
let choiceOrderMap = {}; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
let currentGameQuestions = [];

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
let currentPlayer = null;

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà
let currentUser = null;
let isAdminMode = false;
let adminProfile = null;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
async function checkIsAdmin(userId) {
    // *** ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö admin ***
    if (currentPlayer && !isAdminMode) {
        console.log("üîí ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö admin");
        console.log("Current player:", currentPlayer.name, "isAdminMode:", isAdminMode);
        return null;
    }
    
    try {
        const { data, error } = await supabaseClient
            .from('admin_users')
            .select('*')
            .eq('id', userId)
            .eq('is_active', true)
            .single();
        
        if (error) {
            console.log('‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:', error.message);
            return null;
        }
        
        return data;
    } catch (error) {
        console.error('Error checking admin:', error);
        return null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà
async function loginAdmin(email, password) {
    try {
        // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Supabase Auth
        const { data, error } = await supabaseClient.auth.signInWithPassword({
            email: email,
            password: password
        });
        
        if (error) {
            throw error;
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const adminData = await checkIsAdmin(data.user.id);
        
        if (!adminData) {
            // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
            await supabaseClient.auth.signOut();
            throw new Error('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô');
        }
        
        // ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏∞‡∏ö‡∏ö
        currentUser = data.user;
        adminProfile = adminData;
        isAdminMode = true;
        
        console.log('‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', adminData);
        
        // ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        activateAdminMode();
        
        return true;
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
async function logoutAdmin() {
    try {
        // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        await forceLogoutAllSessions();
        
        console.log('‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö:', error);
    }
}

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
let gameHistory = [];
let currentHistoryPage = 1;
let historyItemsPerPage = 10;
let filteredHistory = [];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ä‡πâ Database)
async function addGameHistoryEntry(player, score, totalQuestions, category, percentage) {
    try {
        const historyData = {
            player_name: player ? player.name : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠',
            score: score || 0,
            total_questions: totalQuestions || 0,
            percentage: percentage || 0,
            category: JSON.stringify(category || {}),
            game_data: JSON.stringify({
                questions: currentGameQuestions ? [...currentGameQuestions] : [],
                userAnswers: userAnswers ? {...userAnswers} : {},
                randomOrder: randomQuestionOrder ? [...randomQuestionOrder] : [],
                choiceOrder: choiceOrderMap ? {...choiceOrderMap} : {}
            })
        };

        const { data, error } = await supabaseClient
            .from('game_history')
            .insert([historyData])
            .select();

        if (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥:', error);
            return false;
        }

        console.log('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        await loadGameHistory();
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà
        const historyTab = document.getElementById('history-tab');
        if (historyTab && historyTab.classList.contains('active')) {
            currentHistoryPage = 1;
            displayGameHistory();
        }
        
        return true;
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
function formatDate(date) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° padding ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    const pad = (num) => String(num).padStart(2, '0');
    
    const day = pad(date.getDate());
    const month = pad(date.getMonth() + 1);
    const year = date.getFullYear();
    const hours = pad(date.getHours());
    const minutes = pad(date.getMinutes());
    
    return `${day}/${month}/${year} ${hours}:${minutes}`;
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayGameHistory()
function displayGameHistory() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô...");
    
    const historyContainer = document.getElementById('history-container');
    
    if (!historyContainer) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'history-container'");
        return false;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    if (!Array.isArray(filteredHistory)) {
        console.error("filteredHistory ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏≠‡∏≤‡πÄ‡∏£‡∏¢‡πå");
        filteredHistory = Array.isArray(gameHistory) ? [...gameHistory] : [];
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    const totalHistoryCount = document.getElementById('total-history-count');
    if (totalHistoryCount) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
        totalHistoryCount.textContent = ` ${filteredHistory.length}`;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    if (filteredHistory.length === 0) {
        historyContainer.innerHTML = `
            <div class="empty-state">
                <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
                <p>‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
            </div>
        `;
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏à‡πÄ‡∏ô‡∏ä‡∏±‡πà‡∏ô
        const paginationElement = document.getElementById('history-pagination');
        const perPageElement = document.getElementById('history-items-per-page');
        
        if (paginationElement) paginationElement.style.display = 'none';
        if (perPageElement) perPageElement.style.display = 'none';
        
        return true;
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (typeof currentHistoryPage !== 'number' || isNaN(currentHistoryPage) || currentHistoryPage < 1) {
        currentHistoryPage = 1;
    }
    
    if (typeof historyItemsPerPage !== 'number' || isNaN(historyItemsPerPage) || historyItemsPerPage < 1) {
        historyItemsPerPage = 10;
    }
    
    const totalPages = Math.ceil(filteredHistory.length / historyItemsPerPage);
    if (currentHistoryPage > totalPages) {
        currentHistoryPage = totalPages;
    }
    
    const startIndex = (currentHistoryPage - 1) * historyItemsPerPage;
    const endIndex = Math.min(startIndex + historyItemsPerPage, filteredHistory.length);
    const currentPageItems = filteredHistory.slice(startIndex, endIndex);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    let historyHTML = `
        <div class="history-table-container">
            <table class="history-table">
                <thead>
                    <tr>
                        <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                        <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô</th>
                        <th>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</th>
                        <th>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</th>
                        <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</th>
                        ${isAdminMode ? '<th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>' : ''}
                    </tr>
                </thead>
                <tbody>
    `;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    currentPageItems.forEach((entry, index) => {
        try {
            // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
            const dateTimeFormatted = formatDateTime24Hour(entry.playedAt);
            const formattedDate = dateTimeFormatted.date;
            const formattedTime = dateTimeFormatted.time;
            
            // ‡πÅ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
            let categoryHTML = '<div class="category-path">';
            
            if (entry.category) {
                const main = entry.category.main || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
                const sub1 = entry.category.sub1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
                const sub2 = entry.category.sub2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
                
                categoryHTML += `<span class="category-segment">${main}</span>`;
                categoryHTML += `<span class="category-segment">${sub1}</span>`;
                categoryHTML += `<span class="category-segment">${sub2}</span>`;
            } else {
                categoryHTML += '<span class="category-segment">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</span>';
            }
            
            categoryHTML += '</div>';
            
            // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡∏π‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
            const scoreHTML = `
                <div class="score-display">
                    ${entry.score || 0}/${entry.totalQuestions || 0}
                    <small>(${entry.percentage || 0}%)</small>
                </div>
            `;
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            const itemNumber = startIndex + index + 1;
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
            const dateTimeHTML = `
                <div class="date-time">
                    <span class="date-display">${formattedDate}</span>
                    <span class="time-display">${formattedTime}</span>
                </div>
            `;
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
            const managementHTML = isAdminMode ? `
                <td class="action-cell">
                    <button class="delete-history-btn small-btn" onclick="confirmDeleteHistory('${entry.id}')">‡∏•‡∏ö</button>
                </td>
            ` : '';
            
            historyHTML += `
                <tr data-id="${entry.id}" class="history-row clickable-row" onclick="showGameDetails('${entry.id}')">
                    <td>${itemNumber}</td>
                    <td><div class="player-name" title="${entry.playerName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'}">${entry.playerName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'}</div></td>
                    <td>${scoreHTML}</td>
                    <td>${categoryHTML}</td>
                    <td>${dateTimeHTML}</td>
                    ${managementHTML}
                </tr>
            `;
        } catch (error) {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà", index, error);
            const managementHTML = isAdminMode ? '<td>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</td>' : '';
            historyHTML += `
                <tr>
                    <td colspan="${isAdminMode ? 6 : 5}">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ</td>
                </tr>
            `;
        }
    });
    
    historyHTML += `
                </tbody>
            </table>
        </div>
    `;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    historyContainer.innerHTML = historyHTML;
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÄ‡∏û‡∏à‡πÄ‡∏ô‡∏ä‡∏±‡πà‡∏ô
    updateHistoryPagination();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏à‡πÄ‡∏ô‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const paginationElement = document.getElementById('history-pagination');
    const perPageElement = document.getElementById('history-items-per-page');
    
    if (paginationElement) paginationElement.style.display = 'flex';
    if (perPageElement) perPageElement.style.display = 'flex';
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß:", currentPageItems.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", isAdminMode ? "(‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)" : "(‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô)");
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï pagination
function updateHistoryPagination() {
    const paginationContainer = document.getElementById('history-pagination');
    const totalPages = Math.ceil(filteredHistory.length / historyItemsPerPage);
    
    // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏´‡∏ô‡πâ‡∏≤
    if (totalPages <= 1) {
        paginationContainer.innerHTML = '';
        return;
    }
    
    let paginationHTML = '';
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    paginationHTML += `
        <button class="history-page-btn ${currentHistoryPage === 1 ? 'disabled' : ''}" 
                onclick="goToHistoryPage(${currentHistoryPage - 1})" 
                ${currentHistoryPage === 1 ? 'disabled' : ''}>
            &laquo;
        </button>
    `;
    
    // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á
    let startPage = Math.max(1, currentHistoryPage - 2);
    let endPage = Math.min(totalPages, startPage + 4);
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö 5 ‡∏õ‡∏∏‡πà‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏û‡∏≠)
    if (endPage - startPage < 4) {
        startPage = Math.max(1, endPage - 4);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
            <button class="history-page-btn ${i === currentHistoryPage ? 'active' : ''}" 
                    onclick="goToHistoryPage(${i})">
                ${i}
            </button>
        `;
    }
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    paginationHTML += `
        <button class="history-page-btn ${currentHistoryPage === totalPages ? 'disabled' : ''}" 
                onclick="goToHistoryPage(${currentHistoryPage + 1})" 
                ${currentHistoryPage === totalPages ? 'disabled' : ''}>
            &raquo;
        </button>
    `;
    
    paginationContainer.innerHTML = paginationHTML;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
function goToHistoryPage(page) {
    if (page < 1 || page > Math.ceil(filteredHistory.length / historyItemsPerPage)) {
        return;
    }
    
    currentHistoryPage = page;
    displayGameHistory();
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô filterGameHistory()
function filterGameHistory() {
    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    const dateFrom = document.getElementById('filter-date-from').value;
    const dateTo = document.getElementById('filter-date-to').value;
    const playerName = document.getElementById('filter-player-name').value.trim().toLowerCase();
    const mainCategory = document.getElementById('filter-history-main-category').value;
    const sub1Category = document.getElementById('filter-history-sub1-category').value;
    const sub2Category = document.getElementById('filter-history-sub2-category').value;
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    filteredHistory = [...gameHistory];
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if (dateFrom) {
        const fromDate = new Date(dateFrom);
        fromDate.setHours(0, 0, 0, 0);
        filteredHistory = filteredHistory.filter(entry => {
            const playedDate = new Date(entry.playedAt);
            return playedDate >= fromDate;
        });
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
    if (dateTo) {
        const toDate = new Date(dateTo);
        toDate.setHours(23, 59, 59, 999);
        filteredHistory = filteredHistory.filter(entry => {
            const playedDate = new Date(entry.playedAt);
            return playedDate <= toDate;
        });
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    if (playerName) {
        filteredHistory = filteredHistory.filter(entry => 
            entry.playerName && entry.playerName.toLowerCase().includes(playerName)
        );
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
    if (mainCategory) {
        filteredHistory = filteredHistory.filter(entry => 
            entry.category && entry.category.main === mainCategory
        );
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
        if (sub1Category) {
            filteredHistory = filteredHistory.filter(entry => 
                entry.category && entry.category.sub1 === sub1Category
            );
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            if (sub2Category) {
                filteredHistory = filteredHistory.filter(entry => 
                    entry.category && entry.category.sub2 === sub2Category
                );
            }
        }
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    currentHistoryPage = 1;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà
    displayGameHistory();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
function updateHistoryCategoryFilter() {
    const categorySelect = document.getElementById('filter-history-category');
    if (!categorySelect) return;
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
    const firstOption = categorySelect.options[0];
    categorySelect.innerHTML = '';
    categorySelect.appendChild(firstOption);
    
    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    const uniqueCategories = new Set();
    gameHistory.forEach(entry => {
        if (entry.category && entry.category.main) {
            uniqueCategories.add(entry.category.main);
        }
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for (const mainCategory in categories) {
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        if (uniqueCategories.has(mainCategory)) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            categorySelect.appendChild(option);
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏ã‡πâ‡∏≥
function initHistorySystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô...");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if (typeof currentHistoryPage !== 'number' || isNaN(currentHistoryPage)) {
        currentHistoryPage = 1;
    }
    
    if (typeof historyItemsPerPage !== 'number' || isNaN(historyItemsPerPage)) {
        historyItemsPerPage = 10;
    }
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤‡∏à‡∏≤‡∏Å Database ‡πÉ‡∏ô initializeApp()
    if (!Array.isArray(gameHistory)) {
        console.warn("gameHistory ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà array ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà");
        gameHistory = [];
    }
    
    if (!Array.isArray(filteredHistory)) {
        console.log("‡∏™‡∏£‡πâ‡∏≤‡∏á filteredHistory ‡∏à‡∏≤‡∏Å gameHistory ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß");
        filteredHistory = [...gameHistory];
    }
    
    console.log("‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß:", gameHistory.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    updateHistoryFilterSection();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    updateHistoryCategoryFilters();
        
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
    setupHistoryEventListeners();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    try {
        displayGameHistory();
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const totalHistoryCount = document.getElementById('total-history-count');
        if (totalHistoryCount) {
            totalHistoryCount.textContent = ` ${filteredHistory.length}`;
        }
        
        console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô:", error);
    }
    
    console.log("‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
    return true;
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô deleteHistoryEntry ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function deleteHistoryEntry(id) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(gameHistory) || gameHistory.length === 0) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return false;
    }
    
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö
    const historyToDelete = gameHistory.find(entry => entry.id === id);
    if (!historyToDelete) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö");
        alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö");
        return false;
    }
    
    try {
        // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Supabase Database
        const { error } = await supabaseClient
            .from('game_history')
            .delete()
            .eq('id', id);
        
        if (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å Database:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: ' + error.message);
            return false;
        }
        
        console.log('‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å Database ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ID:', id);
        
        // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å gameHistory (‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥)
        gameHistory = gameHistory.filter(entry => entry.id !== id);
        
        // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å filteredHistory ‡∏î‡πâ‡∏ß‡∏¢
        filteredHistory = filteredHistory.filter(entry => entry.id !== id);
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏•‡∏á localStorage (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sync)
        localStorage.setItem('quiz-game-history', JSON.stringify(gameHistory));
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        currentHistoryPage = 1; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
        displayGameHistory();
        
        console.log("‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        return true;
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        return false;
    }
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô clearAllHistory ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function clearAllHistory() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(gameHistory) || gameHistory.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return false;
    }
    
    try {
        // ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Supabase Database
        const { error } = await supabaseClient
            .from('game_history')
            .delete()
            .neq('id', 0); // ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (neq ‡∏Ñ‡∏∑‡∏≠ not equal, ‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏™‡∏°‡∏≠)
        
        if (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Database:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ' + error.message);
            return false;
        }
        
        console.log('‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Database ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏∞‡∏ö‡∏ö
        gameHistory = [];
        filteredHistory = [];
        currentHistoryPage = 1;
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏•‡∏á localStorage
        localStorage.setItem('quiz-game-history', JSON.stringify(gameHistory));
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        displayGameHistory();
        
        console.log("‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        return true;
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        return false;
    }
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô confirmDeleteHistory ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - ‡πÄ‡∏û‡∏¥‡πà‡∏° confirmation ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô
function confirmDeleteHistory(id) {
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
    if (event) {
        event.preventDefault();
        event.stopPropagation();
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ id ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!id) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô");
        return false;
    }
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö
    const historyToDelete = filteredHistory.find(entry => entry.id === id);
    if (!historyToDelete) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö");
        return false;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    const confirmDialog = document.createElement('div');
    confirmDialog.className = 'confirm-dialog-overlay';
    confirmDialog.innerHTML = `
        <div class="confirm-dialog">
            <div class="confirm-header">
                <h3>‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥</h3>
                <button class="close-btn" onclick="closeConfirmDialog()">&times;</button>
            </div>
            <div class="confirm-body">
                <p><strong>‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?</strong></p>
                <div style="margin: 15px 0; padding: 10px; background-color: #f0f7ff; border-radius: 6px; border-left: 4px solid #1976d2;">
                    <p><strong>‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:</strong> ${historyToDelete.playerName}</p>
                    <p><strong>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:</strong> ${historyToDelete.score}/${historyToDelete.totalQuestions} (${historyToDelete.percentage}%)</p>
                    <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${formatDateTime24Hour(historyToDelete.playedAt).full}</p>
                </div>
                <p style="color: #f44336; font-weight: 600;">‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏≤‡∏ß‡∏£ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ</p>
            </div>
            <div class="confirm-actions">
                <button class="confirm-delete-btn" onclick="performDeleteHistory('${id}')">üóëÔ∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</button>
                <button class="cancel-btn" onclick="closeConfirmDialog()">‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
        </div>
    `;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô DOM
    document.body.appendChild(confirmDialog);
    
    return true;
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô confirmClearAllHistory ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - ‡πÄ‡∏û‡∏¥‡πà‡∏° confirmation ‡∏ó‡∏µ‡πà‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
function confirmClearAllHistory() {
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
    if (event) {
        event.preventDefault();
        event.stopPropagation();
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(gameHistory) || gameHistory.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return false;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    const confirmDialog = document.createElement('div');
    confirmDialog.className = 'confirm-dialog-overlay';
    confirmDialog.innerHTML = `
        <div class="confirm-dialog">
            <div class="confirm-header">
                <h3>üö® ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
                <button class="close-btn" onclick="closeConfirmDialog()">&times;</button>
            </div>
            <div class="confirm-body">
                <p><strong>‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${gameHistory.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?</strong></p>
                
                <div style="margin: 15px 0; padding: 15px; background-color: #fff3e0; border-radius: 6px; border-left: 4px solid #ff9800;">
                    <p><strong>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö:</strong></p>
                    <p>‚Ä¢ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${gameHistory.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                    <p>‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô</p>
                    <p>‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö</p>
                </div>
                
                <div style="margin: 15px 0; padding: 15px; background-color: #ffebee; border-radius: 6px; border-left: 4px solid #f44336;">
                    <p style="color: #f44336; font-weight: 600; margin: 0;">
                        üö® <strong>‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</strong> ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏≤‡∏ß‡∏£ 
                        ‡πÅ‡∏•‡∏∞<u>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ</u>
                    </p>
                </div>
                
                <div style="margin: 15px 0; padding: 10px; background-color: #f5f5f5; border-radius: 6px;">
                    <label style="display: flex; align-items: center; cursor: pointer;">
                        <input type="checkbox" id="confirm-delete-checkbox" style="margin-right: 8px;">
                        <span>‡∏â‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏≤‡∏ß‡∏£</span>
                    </label>
                </div>
            </div>
            <div class="confirm-actions">
                <button class="confirm-delete-btn" id="final-delete-btn" onclick="performClearAllHistory()" disabled>üóëÔ∏è ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
                <button class="cancel-btn" onclick="closeConfirmDialog()">‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
        </div>
    `;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô DOM
    document.body.appendChild(confirmDialog);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö checkbox
    setTimeout(() => {
        const checkbox = document.getElementById('confirm-delete-checkbox');
        const deleteBtn = document.getElementById('final-delete-btn');
        
        if (checkbox && deleteBtn) {
            checkbox.addEventListener('change', function() {
                deleteBtn.disabled = !this.checked;
                if (this.checked) {
                    deleteBtn.style.backgroundColor = '#f44336';
                    deleteBtn.style.cursor = 'pointer';
                } else {
                    deleteBtn.style.backgroundColor = '#ccc';
                    deleteBtn.style.cursor = 'not-allowed';
                }
            });
        }
    }, 100);
    
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
function closeConfirmDialog() {
    const dialogs = document.querySelectorAll('.confirm-dialog-overlay');
    dialogs.forEach(dialog => {
        dialog.remove();
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏à‡∏£‡∏¥‡∏á (‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å confirmation)
async function performDeleteHistory(id) {
    closeConfirmDialog();
    
    // ‡πÅ‡∏™‡∏î‡∏á loading
    const loadingMsg = document.createElement('div');
    loadingMsg.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 20px;
        border-radius: 8px;
        z-index: 10000;
    `;
    loadingMsg.textContent = 'üóëÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥...';
    document.body.appendChild(loadingMsg);
    
    const success = await deleteHistoryEntry(id);
    
    // ‡∏•‡∏ö loading message
    loadingMsg.remove();
    
    if (success) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        const successMsg = document.createElement('div');
        successMsg.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #4caf50;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            z-index: 10000;
            font-weight: 600;
        `;
        successMsg.textContent = '‚úÖ ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß';
        document.body.appendChild(successMsg);
        
        setTimeout(() => {
            successMsg.remove();
        }, 3000);
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏£‡∏¥‡∏á
async function performClearAllHistory() {
    closeConfirmDialog();
    
    // ‡πÅ‡∏™‡∏î‡∏á loading
    const loadingMsg = document.createElement('div');
    loadingMsg.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 20px;
        border-radius: 8px;
        z-index: 10000;
        text-align: center;
    `;
    loadingMsg.innerHTML = 'üóëÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...<br><small>‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</small>';
    document.body.appendChild(loadingMsg);
    
    const success = await clearAllHistory();
    
    // ‡∏•‡∏ö loading message
    loadingMsg.remove();
    
    if (success) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        const successMsg = document.createElement('div');
        successMsg.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #4caf50;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            z-index: 10000;
            font-weight: 600;
        `;
        successMsg.textContent = '‚úÖ ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß';
        document.body.appendChild(successMsg);
        
        setTimeout(() => {
            successMsg.remove();
        }, 4000);
    }
}

function updateHistoryFilterSection() {
    const filterForm = document.querySelector('.filter-form');
    if (!filterForm) return;
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á HTML ‡∏Ç‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á - ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏î‡∏µ
    filterForm.innerHTML = `
        <div class="filter-container">
            <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà -->
            <div class="filter-row">
                <div class="filter-group date-group">
                    <div class="filter-label">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤:</div>
                    <div class="date-inputs">
                        <div class="date-field">
                            <input type="date" id="filter-date-from" class="date-input" placeholder="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô">
                        </div>
                        <span class="date-separator">-</span>
                        <div class="date-field">
                            <input type="date" id="filter-date-to" class="date-input" placeholder="‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î">
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô -->
            <div class="filter-row">
                <div class="filter-group search-group">
                    <div class="filter-label">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:</div>
                    <div class="search-field">
                        <input type="text" id="filter-player-name" class="search-input" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤">
                        <span class="search-icon">üîç</span>
                    </div>
                </div>
            </div>
            
            <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà -->
            <div class="filter-row">
                <div class="filter-group category-group">
                    <div class="filter-label">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</div>
                    <div class="category-selects">
                        <div class="select-field">
                            <select id="filter-history-main-category" class="filter-select">
                                <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>
                            </select>
                            <span class="select-arrow"></span>
                        </div>
                        <div class="select-field">
                            <select id="filter-history-sub1-category" class="filter-select" disabled>
                                <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>
                            </select>
                            <span class="select-arrow"></span>
                        </div>
                        <div class="select-field">
                            <select id="filter-history-sub2-category" class="filter-select" disabled>
                                <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>
                            </select>
                            <span class="select-arrow"></span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô -->
            <div class="filter-row filter-actions-row">
                <button id="apply-history-filter" class="filter-button primary-button">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
                <button id="reset-history-filter" class="filter-button secondary-button">‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï</button>
            </div>
        </div>
    `;
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    updateHistoryCategoryFilters();
}

function updateHistoryCategoryFilters() {
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô
    updateHistoryMainCategory();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    setupCategoryFilterListeners();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
function updateHistoryMainCategory() {
    const categorySelect = document.getElementById('filter-history-main-category');
    if (!categorySelect) return;
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
    const firstOption = categorySelect.options[0];
    categorySelect.innerHTML = '';
    categorySelect.appendChild(firstOption);
    
    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    const uniqueCategories = new Set();
    gameHistory.forEach(entry => {
        if (entry.category && entry.category.main) {
            uniqueCategories.add(entry.category.main);
        }
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for (const mainCategory in categories) {
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        if (uniqueCategories.has(mainCategory)) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            categorySelect.appendChild(option);
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
function updateHistorySub1Category(mainCategory) {
    const sub1Select = document.getElementById('filter-history-sub1-category');
    if (!sub1Select) return;
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏°
    sub1Select.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    if (!mainCategory) {
        sub1Select.disabled = true;
        return;
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    if (categories[mainCategory]) {
        for (const sub1 in categories[mainCategory]) {
            const option = document.createElement('option');
            option.value = sub1;
            option.textContent = sub1;
            sub1Select.appendChild(option);
        }
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    sub1Select.disabled = false;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
function updateHistorySub2Category(mainCategory, subCategory1) {
    const sub2CategorySelect = document.getElementById('filter-history-sub2-category');
    if (!sub2CategorySelect) return;
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏°
    sub2CategorySelect.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    if (!mainCategory || !subCategory1) {
        sub2CategorySelect.disabled = true;
        return;
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    if (categories[mainCategory] && categories[mainCategory][subCategory1]) {
        for (const subCategory2Item of categories[mainCategory][subCategory1]) {
            const option = document.createElement('option');
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô object ‡∏´‡∏£‡∏∑‡∏≠ string
            if (typeof subCategory2Item === 'object' && subCategory2Item.name) {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô object ‡πÉ‡∏´‡∏°‡πà
                option.value = subCategory2Item.name;
                option.textContent = subCategory2Item.name;
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏Å‡πà‡∏≤ (backward compatibility)
                option.value = subCategory2Item;
                option.textContent = subCategory2Item;
            }
            
            sub2CategorySelect.appendChild(option);
        }
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    sub2CategorySelect.disabled = false;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function setupCategoryFilterListeners() {
    const mainCategorySelect = document.getElementById('filter-history-main-category');
    const sub1CategorySelect = document.getElementById('filter-history-sub1-category');
    const sub2CategorySelect = document.getElementById('filter-history-sub2-category');
    
    if (mainCategorySelect) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newMainCategorySelect = mainCategorySelect.cloneNode(true);
        if (mainCategorySelect.parentNode) {
            mainCategorySelect.parentNode.replaceChild(newMainCategorySelect, mainCategorySelect);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newMainCategorySelect.addEventListener('change', function() {
            const mainCategory = this.value;
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
            updateHistorySub1Category(mainCategory);
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            if (sub2CategorySelect) {
                sub2CategorySelect.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                sub2CategorySelect.disabled = true;
            }
            
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            filterGameHistory();
        });
    }
    
    if (sub1CategorySelect) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newSub1CategorySelect = sub1CategorySelect.cloneNode(true);
        if (sub1CategorySelect.parentNode) {
            sub1CategorySelect.parentNode.replaceChild(newSub1CategorySelect, sub1CategorySelect);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newSub1CategorySelect.addEventListener('change', function() {
            const mainCategory = document.getElementById('filter-history-main-category').value;
            const sub1Category = this.value;
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            updateHistorySub2Category(mainCategory, sub1Category);
            
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            filterGameHistory();
        });
    }
    
    if (sub2CategorySelect) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newSub2CategorySelect = sub2CategorySelect.cloneNode(true);
        if (sub2CategorySelect.parentNode) {
            sub2CategorySelect.parentNode.replaceChild(newSub2CategorySelect, sub2CategorySelect);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newSub2CategorySelect.addEventListener('change', function() {
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            filterGameHistory();
        });
    }
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô setupHistoryEventListeners ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
function setupHistoryEventListeners() {
    const applyFilterBtn = document.getElementById('apply-history-filter');
    if (applyFilterBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
        const newApplyFilterBtn = applyFilterBtn.cloneNode(true);
        if (applyFilterBtn.parentNode) {
            applyFilterBtn.parentNode.replaceChild(newApplyFilterBtn, applyFilterBtn);
        }
        
        newApplyFilterBtn.addEventListener('click', function() {
            try {
                filterGameHistory();
            } catch (error) {
                console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥:", error);
                alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
            }
        });
        console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    }
    
    const resetFilterBtn = document.getElementById('reset-history-filter');
    if (resetFilterBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
        const newResetFilterBtn = resetFilterBtn.cloneNode(true);
        if (resetFilterBtn.parentNode) {
            resetFilterBtn.parentNode.replaceChild(newResetFilterBtn, resetFilterBtn);
        }
        
        newResetFilterBtn.addEventListener('click', function() {
            try {
                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏á
                const fromDateInput = document.getElementById('filter-date-from');
                const toDateInput = document.getElementById('filter-date-to');
                const playerNameInput = document.getElementById('filter-player-name');
                const mainCategorySelect = document.getElementById('filter-history-main-category');
                const sub1CategorySelect = document.getElementById('filter-history-sub1-category');
                const sub2CategorySelect = document.getElementById('filter-history-sub2-category');
                
                if (fromDateInput) fromDateInput.value = '';
                if (toDateInput) toDateInput.value = '';
                if (playerNameInput) playerNameInput.value = '';
                if (mainCategorySelect) mainCategorySelect.value = '';
                if (sub1CategorySelect) {
                    sub1CategorySelect.value = '';
                    sub1CategorySelect.disabled = true;
                }
                if (sub2CategorySelect) {
                    sub2CategorySelect.value = '';
                    sub2CategorySelect.disabled = true;
                }
                
                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
                filteredHistory = [...gameHistory];
                currentHistoryPage = 1;
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà
                displayGameHistory();
            } catch (error) {
                console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á:", error);
            }
        });
        console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå)
    const playerNameInput = document.getElementById('filter-player-name');
    if (playerNameInput) {
        let searchTimeout = null;
        playerNameInput.addEventListener('input', function() {
            // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            if (searchTimeout) {
                clearTimeout(searchTimeout);
            }
            
            // ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
            searchTimeout = setTimeout(() => {
                filterGameHistory();
                searchTimeout = null;
            }, 500); // ‡∏£‡∏≠ 500ms ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå
        });
    }
    
    const historyPerPageSelect = document.getElementById('history-per-page');
    if (historyPerPageSelect) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
        const newHistoryPerPageSelect = historyPerPageSelect.cloneNode(true);
        if (historyPerPageSelect.parentNode) {
            historyPerPageSelect.parentNode.replaceChild(newHistoryPerPageSelect, historyPerPageSelect);
        }
        
        newHistoryPerPageSelect.addEventListener('change', function() {
            try {
                historyItemsPerPage = parseInt(this.value);
                if (isNaN(historyItemsPerPage) || historyItemsPerPage < 1) {
                    historyItemsPerPage = 10; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                }
                currentHistoryPage = 1;
                displayGameHistory();
            } catch (error) {
                console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤:", error);
            }
        });
        console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    }
}

async function initializeApp() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô...");
    
    // 1. ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Database ‡πÅ‡∏•‡∏∞ localStorage
    await loadCategories();
    await loadQuestions();
    await loadGameHistory(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
    
    // 2. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö
    setupTabNavigation();
    
    // 3. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô)
    initPlayerSystem();
    
    // 4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
    await initCategorySystemNew();
    
    // 5. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    initQuestionSystem();
    
    // 6. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
    initHistorySystem();
    
    // 7. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    initPlaySystem();
    
    // 8. ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    enableCategoryPlaySystem();
    
    // 9. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    setupCategoryFilter();
    setupSearchQuestions();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    setInitialTabState();
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    initAdminSystem();
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Admin
    startAdminStatusMonitor();

    console.log("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å initializeApp
function setInitialTabState() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà
    const activeTabs = document.querySelectorAll('.nav-tab.active');
    if (activeTabs.length > 0) {
        const activeTabId = activeTabs[0].id;
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ login ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
        const loginScreen = document.getElementById('login-screen');
        if (loginScreen) {
            if (activeTabId === 'play-tab') {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ login ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login
                if (!currentPlayer) {
                    loginScreen.classList.remove('hidden');
                } else {
                    loginScreen.classList.add('hidden');
                    document.getElementById('start-screen').classList.remove('hidden');
                }
            } else {
                loginScreen.classList.add('hidden');
            }
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° class ‡∏ö‡∏ô body ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ó‡πá‡∏ö‡πÑ‡∏´‡∏ô
        document.body.className = 'active-tab-' + activeTabId.replace('-tab', '');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
function setupTabNavigation() {
    const createTab = document.getElementById('create-tab');
    const playTab = document.getElementById('play-tab');
    const historyTab = document.getElementById('history-tab');
    const createContent = document.getElementById('create-content');
    const playContent = document.getElementById('play-content');
    const historyContent = document.getElementById('history-content');
    const loginScreen = document.getElementById('login-screen');
    
    console.log("Tab elements:", {
        createTab: createTab ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö", 
        playTab: playTab ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö", 
        historyTab: historyTab ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö", 
        createContent: createContent ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö", 
        playContent: playContent ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö", 
        historyContent: historyContent ? "‡∏û‡∏ö" : "‡πÑ‡∏°‡πà‡∏û‡∏ö"
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!createTab || !playTab || !historyTab || !createContent || !playContent || !historyContent) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö elements ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô - ‡∏à‡∏∞‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô 300ms");
        setTimeout(setupTabNavigation, 300);
        return false;
    }
    
    // ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    createTab.addEventListener('click', function() {
        console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°");
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö
        createTab.classList.add('active');
        playTab.classList.remove('active');
        historyTab.classList.remove('active');
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        createContent.classList.add('active');
        playContent.classList.remove('active');
        historyContent.classList.remove('active');
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏ó‡πá‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        if (loginScreen) loginScreen.classList.add('hidden');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á
        document.body.className = 'active-tab-create';
    });

    // ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏° - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    playTab.addEventListener('click', function() {
        console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°");
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö
        createTab.classList.remove('active');
        playTab.classList.add('active');
        historyTab.classList.remove('active');
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        createContent.classList.remove('active');
        playContent.classList.add('active');
        historyContent.classList.remove('active');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á
        document.body.className = 'active-tab-play';
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        if (isAdminMode && adminProfile) {
            console.log("‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô");
            
            // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
            if (loginScreen) loginScreen.classList.add('hidden');
            
            // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
            if (!currentPlayer) {
                currentPlayer = {
                    name: adminProfile.name || 'Admin',
                    loginTime: new Date().toISOString(),
                    avatar: 'üëë'
                };
                console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ currentPlayer ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:", currentPlayer);
            }
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const startScreen = document.getElementById('start-screen');
            const categorySelectionContainer = document.getElementById('category-selection-container');
            const quizScreen = document.getElementById('quiz-screen');
            const resultScreen = document.getElementById('result-screen');
            
            // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            if (quizScreen) quizScreen.classList.add('hidden');
            if (resultScreen) resultScreen.classList.add('hidden');
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            if (startScreen) startScreen.classList.remove('hidden');
            if (categorySelectionContainer) categorySelectionContainer.classList.remove('hidden');
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
            updatePlayerInfoInGame();
            
        } else {
            console.log("‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ - ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°");
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°
            updatePlayScreenVisibility();
        }
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
        updatePlayMainCategorySelect();
    });
    
    // ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å Admin ‡πÅ‡∏•‡∏∞ Player ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    historyTab.addEventListener('click', function() {
        console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô");
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö
        createTab.classList.remove('active');
        playTab.classList.remove('active');
        historyTab.classList.add('active');
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ active ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        createContent.classList.remove('active');
        playContent.classList.remove('active');
        historyContent.classList.add('active');
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏ó‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
        if (loginScreen) loginScreen.classList.add('hidden');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á
        document.body.className = 'active-tab-history';
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        updateHistoryPageHeader();
        
        // **‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÅ‡∏¢‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Admin ‡πÅ‡∏•‡∏∞ Player**
        if (isAdminMode && adminProfile) {
            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
            // Admin: ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
            displayAdminHistory();
        } else {
            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô - ‡∏î‡∏π‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á");
            // Player: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
            displayPlayerHistory();
        }
    });
    
    console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏Å‡∏° - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
function updatePlayerInfoInGame() {
    if (!isAdminMode || !currentPlayer) return;
    
    const quizContainer = document.querySelector('.container.quiz-player');
    if (!quizContainer) return;
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingPlayerInfo = quizContainer.querySelector('.player-info.top-right');
    if (existingPlayerInfo) {
        existingPlayerInfo.remove();
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà
    const playerInfo = document.createElement('div');
    playerInfo.className = 'player-info top-right';
    playerInfo.innerHTML = `
        <div class="player-name">üëë ${currentPlayer.name}</div>
    `;
    quizContainer.appendChild(playerInfo);
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:", currentPlayer.name);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å Database
async function loadCategories() {
  try {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° is_locked
    const { data, error } = await supabaseClient
      .from('categories')
      .select('*')  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å select('*') ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ is_locked ‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢
      .order('level', { ascending: true })
      .order('name', { ascending: true });
    
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:', error);
      categories = {};
      return;
    }
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Database ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö nested object ‡πÄ‡∏î‡∏¥‡∏°
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• is_locked ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
    categories = {};
    
    data.forEach(item => {
      if (item.level === 1) {
        // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
        if (!categories[item.name]) {
          categories[item.name] = {};
        }
      } else if (item.level === 2) {
        // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
        if (!categories[item.parent_name]) {
          categories[item.parent_name] = {};
        }
        if (!categories[item.parent_name][item.name]) {
          categories[item.parent_name][item.name] = [];
        }
      } else if (item.level === 3) {
        // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• is_locked
        const parts = item.parent_name.split(' > ');
        const mainCategory = parts[0];
        const sub1Category = parts[1];
        
        if (!categories[mainCategory]) {
          categories[mainCategory] = {};
        }
        if (!categories[mainCategory][sub1Category]) {
          categories[mainCategory][sub1Category] = [];
        }
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà string ‡πÄ‡∏õ‡πá‡∏ô object ‡∏ó‡∏µ‡πà‡∏°‡∏µ name ‡πÅ‡∏•‡∏∞ is_locked
        categories[mainCategory][sub1Category].push({
          name: item.name,
          is_locked: item.is_locked || false  // default ‡πÄ‡∏õ‡πá‡∏ô false ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô null
        });
      }
    });
    
    console.log('‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', Object.keys(categories).length, '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
    console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° is_locked:', categories);
    
  } catch (error) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
    categories = {};
  }
}

async function addCategory(type, parent, grandparent) {
    console.log("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", type, parent, grandparent);

    const categoryName = document.getElementById('category-name').value.trim();
    
    if (!categoryName) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà');
        return false;
    }
    
    try {
        let categoryData = { name: categoryName };
        
        switch (type) {
            case 'main':
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingMain } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', categoryName)
                    .eq('level', 1);
                
                if (existingMain && existingMain.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return false;
                }
                
                categoryData.level = 1;
                categoryData.parent_name = null;
                break;
                
            case 'sub1':
                if (!parent) {
                    alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
                    return false;
                }
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingSub1 } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', categoryName)
                    .eq('level', 2)
                    .eq('parent_name', parent);
                
                if (existingSub1 && existingSub1.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return false;
                }
                
                categoryData.level = 2;
                categoryData.parent_name = parent;
                break;
                
            case 'sub2':
                if (!parent || !grandparent) {
                    alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
                    return false;
                }
                
                const parentPath = `${parent} > ${grandparent}`;
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingSub2 } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', categoryName)
                    .eq('level', 3)
                    .eq('parent_name', parentPath);
                
                if (existingSub2 && existingSub2.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return false;
                }
                
                categoryData.level = 3;
                categoryData.parent_name = parentPath;
                break;
                
            default:
                alert('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
                return false;
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á database
        const { error } = await supabaseClient
            .from('categories')
            .insert([categoryData]);
        
        if (error) {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ' + error.message);
        }
        
        console.log("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", categoryName);
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Database
        await loadCategories();
        
        // ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°
        closeAddCategoryForm();
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        renderCategoryTree();
        updateCategoryUI();
        
        alert('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
        
        return true;
        
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
    }
    
    return false;
}

// ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function deleteMainCategory(mainCategory) {
    if (categories[mainCategory]) {
        delete categories[mainCategory];
        saveCategories();
        updateCategoryUI();
        return true;
    }
    return false;
}

function deleteSubCategory1(mainCategory, subCategory1) {
    if (categories[mainCategory] && categories[mainCategory][subCategory1]) {
        delete categories[mainCategory][subCategory1];
        saveCategories();
        updateCategoryUI();
        return true;
    }
    return false;
}

function deleteSubCategory2(mainCategory, subCategory1, subCategory2) {
    if (categories[mainCategory] && 
        categories[mainCategory][subCategory1] && 
        categories[mainCategory][subCategory1].includes(subCategory2)) {
        
        const index = categories[mainCategory][subCategory1].indexOf(subCategory2);
        categories[mainCategory][subCategory1].splice(index, 1);
        saveCategories();
        updateCategoryUI();
        return true;
    }
    return false;
}

async function updateCategoryUI() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...");
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å database
    await loadCategories();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    updateCategorySelects();
    updateQuestionCategorySelects();
    updateFilterMainCategory();
    updatePlayMainCategorySelect();
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    resetFiltersAndDisplay();
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö Tree View
function updateCategoriesTree() {
    const treeContainer = document.getElementById('categories-tree');
    treeContainer.innerHTML = '';
    
    for (const mainCategory in categories) {
        const mainCatDiv = document.createElement('div');
        mainCatDiv.className = 'category-item';
        mainCatDiv.innerHTML = `<strong>${mainCategory}</strong>`;
        
        const subCatContainer = document.createElement('div');
        subCatContainer.className = 'sub-categories';
        
        for (const subCategory1 in categories[mainCategory]) {
            const subCat1Div = document.createElement('div');
            subCat1Div.className = 'category-item';
            subCat1Div.innerHTML = `<strong>${subCategory1}</strong>`;
            
            const subCat2Container = document.createElement('div');
            subCat2Container.className = 'sub-categories';
            
            for (const subCategory2 of categories[mainCategory][subCategory1]) {
                const subCat2Div = document.createElement('div');
                subCat2Div.className = 'category-item';
                subCat2Div.textContent = subCategory2;
                subCat2Container.appendChild(subCat2Div);
            }
            
            subCat1Div.appendChild(subCat2Container);
            subCatContainer.appendChild(subCat1Div);
        }
        
        mainCatDiv.appendChild(subCatContainer);
        treeContainer.appendChild(mainCatDiv);
    }
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Select ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function updateCategorySelects() {
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó select ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const newMainCategorySelect = document.getElementById('new-main-category');
    if (newMainCategorySelect) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
        const firstOption = newMainCategorySelect.options[0];
        newMainCategorySelect.innerHTML = '';
        newMainCategorySelect.appendChild(firstOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        for (const mainCategory in categories) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            newMainCategorySelect.appendChild(option);
        }
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó select ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    updateQuestionCategorySelects();
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Select ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function updateEditCategorySelects() {
    const editMainCategory = document.getElementById('edit-main-category');
    const editSubCategory1 = document.getElementById('edit-sub-category1');
    const editSubCategory2 = document.getElementById('edit-sub-category2');
    
    if (editMainCategory) {
        editMainCategory.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å</option>';
        
        for (const mainCategory in categories) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            editMainCategory.appendChild(option);
        }
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    if (editSubCategory1) {
        editSubCategory1.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
        editSubCategory1.disabled = true;
    }
    
    if (editSubCategory2) {
        editSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        editSubCategory2.disabled = true;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Select ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function updateQuestionCategorySelects() {
    const questionMainCategory = document.getElementById('question-main-category');
    const questionSubCategory1 = document.getElementById('question-sub-category1');
    const questionSubCategory2 = document.getElementById('question-sub-category2');
    
    if (questionMainCategory) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
        const firstOption = questionMainCategory.options[0];
        questionMainCategory.innerHTML = '';
        questionMainCategory.appendChild(firstOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        for (const mainCategory in categories) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            questionMainCategory.appendChild(option);
        }
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢
    if (questionSubCategory1) {
        questionSubCategory1.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
        questionSubCategory1.disabled = true;
    }
    
    if (questionSubCategory2) {
        questionSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        questionSubCategory2.disabled = true;
    }
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
}

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function setupQuestionCategoryListeners() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...");
    
    const questionMainCategory = document.getElementById('question-main-category');
    const questionSubCategory1 = document.getElementById('question-sub-category1');
    const questionSubCategory2 = document.getElementById('question-sub-category2');
    
    if (questionMainCategory) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newMainCategory = questionMainCategory.cloneNode(true);
        questionMainCategory.parentNode.replaceChild(newMainCategory, questionMainCategory);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newMainCategory.addEventListener('change', function() {
    console.log("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å:", this.value);
    const mainCategory = this.value;
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    document.getElementById('question-sub-category1').value = '';
    document.getElementById('question-sub-category2').value = '';
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2 - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    document.getElementById('question-sub-category2').innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
    document.getElementById('question-sub-category2').disabled = true;
    
    if (mainCategory) {
        updateSubCategory1Select(document.getElementById('question-sub-category1'), mainCategory);
    } else {
        document.getElementById('question-sub-category1').innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
        document.getElementById('question-sub-category1').disabled = true;
    }
});
    }
    
    if (questionSubCategory1) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newSubCategory1 = questionSubCategory1.cloneNode(true);
        questionSubCategory1.parentNode.replaceChild(newSubCategory1, questionSubCategory1);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newSubCategory1.addEventListener('change', function() {
    console.log("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1:", this.value);
    const mainCategory = document.getElementById('question-main-category').value;
    const subCategory1 = this.value;
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2 - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    document.getElementById('question-sub-category2').value = '';
    
    if (mainCategory && subCategory1) {
        updateSubCategory2Select(document.getElementById('question-sub-category2'), mainCategory, subCategory1);
    } else {
        document.getElementById('question-sub-category2').innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        document.getElementById('question-sub-category2').disabled = true;
    }
});
    }
    
    console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö radio buttons
function setupChoiceRadioButtons() {
  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å radio button ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏á‡πÑ‡∏õ‡∏ï‡∏£‡∏á‡∏°‡∏≤
  const radioButtons = document.querySelectorAll('input[name="correct-answer"]');
  
  // ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞)
  radioButtons.forEach(radio => {
    radio.checked = false;
    
    // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ replaceWith ‡πÅ‡∏ó‡∏ô cloneNode
    radio.addEventListener('click', function() {
      console.log("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:", this.value);
    });
  });
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
function updateSubCategory1Select(selectElement, mainCategory) {
    selectElement.innerHTML = '';
    
    // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoryCount = countQuestionsInCategory();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° placeholder ‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const placeholderOption = document.createElement('option');
    placeholderOption.value = "";
    placeholderOption.textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1";
    placeholderOption.disabled = true;
    placeholderOption.selected = true;
    placeholderOption.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ dropdown
    selectElement.appendChild(placeholderOption);
    
    if (mainCategory && categories[mainCategory]) {
        for (const subCategory1 in categories[mainCategory]) {
            const sub1Key = `${mainCategory}|${subCategory1}`;
            const questionCount = categoryCount[sub1Key] || 0;
            const option = document.createElement('option');
            option.value = subCategory1;
            option.textContent = `${subCategory1} (${questionCount})`;
            selectElement.appendChild(option);
        }
        selectElement.disabled = false;
    } else {
        selectElement.disabled = true;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
function updateSubCategory2Select(selectElement, mainCategory, subCategory1) {
    selectElement.innerHTML = '';
    
    // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoryCount = countQuestionsInCategory();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° placeholder ‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const placeholderOption = document.createElement('option');
    placeholderOption.value = "";
    placeholderOption.textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2";
    placeholderOption.disabled = true;
    placeholderOption.selected = true;
    placeholderOption.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ dropdown
    selectElement.appendChild(placeholderOption);
    
    if (mainCategory && subCategory1 && 
        categories[mainCategory] && 
        categories[mainCategory][subCategory1]) {
        
        // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô object ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
        for (const subCategory2Item of categories[mainCategory][subCategory1]) {
            const option = document.createElement('option');
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô object ‡∏´‡∏£‡∏∑‡∏≠ string
            if (typeof subCategory2Item === 'object' && subCategory2Item.name) {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô object ‡πÉ‡∏´‡∏°‡πà
                const subCategory2Name = subCategory2Item.name;
                const sub2Key = `${mainCategory}|${subCategory1}|${subCategory2Name}`;
                const questionCount = categoryCount[sub2Key] || 0;
                
                option.value = subCategory2Name;
                
                // ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ñ‡∏π‡∏Å‡∏•‡πá‡∏≠‡∏Å
                const lockIcon = subCategory2Item.is_locked ? ' üîí' : '';
                option.textContent = `${subCategory2Name} (${questionCount})${lockIcon}`;
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á - ‡∏ñ‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà admin ‡πÉ‡∏´‡πâ disable
                if (subCategory2Item.is_locked && !canPlayerAccessCategory(mainCategory, subCategory1, subCategory2Name)) {
                    option.disabled = true;
                    option.style.color = '#999999';
                    option.style.backgroundColor = '#f5f5f5';
                }
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏Å‡πà‡∏≤ (backward compatibility)
                const sub2Key = `${mainCategory}|${subCategory1}|${subCategory2Item}`;
                const questionCount = categoryCount[sub2Key] || 0;
                option.value = subCategory2Item;
                option.textContent = `${subCategory2Item} (${questionCount})`;
            }
            
            selectElement.appendChild(option);
        }
        selectElement.disabled = false;
    } else {
        selectElement.disabled = true;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ñ‡∏π‡∏Å‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function isCategoryLocked(mainCategory, subCategory1, subCategory2) {
    try {
        if (!categories[mainCategory] || !categories[mainCategory][subCategory1]) {
            return false;
        }
        
        const subCategory2List = categories[mainCategory][subCategory1];
        
        // ‡∏´‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
        for (const subCategory2Item of subCategory2List) {
            if (typeof subCategory2Item === 'object' && subCategory2Item.name) {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô object ‡πÉ‡∏´‡∏°‡πà
                if (subCategory2Item.name === subCategory2) {
                    return subCategory2Item.is_locked || false;
                }
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏Å‡πà‡∏≤ (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å)
                if (subCategory2Item === subCategory2) {
                    return false;
                }
            }
        }
        
        return false;
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å:', error);
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Event Listeners
function setupCategoryEventListeners() {
    // ‡πÅ‡∏ó‡πá‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const viewCategoriesTab = document.getElementById('view-categories-tab');
    const addCategoryTab = document.getElementById('add-category-tab');
    const editCategoryTab = document.getElementById('edit-category-tab');
    
    const viewCategoriesContent = document.getElementById('view-categories-content');
    const addCategoryContent = document.getElementById('add-category-content');
    const editCategoryContent = document.getElementById('edit-category-content');
    
    // ‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    if (viewCategoriesTab) {
        viewCategoriesTab.addEventListener('click', function() {
            viewCategoriesTab.classList.add('active');
            addCategoryTab.classList.remove('active');
            editCategoryTab.classList.remove('active');
            
            viewCategoriesContent.classList.add('active');
            addCategoryContent.classList.remove('active');
            editCategoryContent.classList.remove('active');
        });
    }
    
    if (addCategoryTab) {
        addCategoryTab.addEventListener('click', function() {
            viewCategoriesTab.classList.remove('active');
            addCategoryTab.classList.add('active');
            editCategoryTab.classList.remove('active');
            
            viewCategoriesContent.classList.remove('active');
            addCategoryContent.classList.add('active');
            editCategoryContent.classList.remove('active');
        });
    }
    
    if (editCategoryTab) {
        editCategoryTab.addEventListener('click', function() {
            viewCategoriesTab.classList.remove('active');
            addCategoryTab.classList.remove('active');
            editCategoryTab.classList.add('active');
            
            viewCategoriesContent.classList.remove('active');
            addCategoryContent.classList.remove('active');
            editCategoryContent.classList.add('active');
        });
    }
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const saveCategoryBtn = document.getElementById('save-category');
    if (saveCategoryBtn) {
        saveCategoryBtn.addEventListener('click', function() {
            const newMainCategorySelect = document.getElementById('new-main-category');
            const newMainCategoryText = document.getElementById('new-main-category-text');
            const newSubCategory1Select = document.getElementById('new-sub-category1');
            const newSubCategory1Text = document.getElementById('new-sub-category1-text');
            const newSubCategory2Select = document.getElementById('new-sub-category2');
            const newSubCategory2Text = document.getElementById('new-sub-category2-text');
            
            let mainCategory, subCategory1, subCategory2;
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
            if (newMainCategorySelect.value === 'new') {
                if (newMainCategoryText.value.trim() === '') {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà');
                    return;
                }
                mainCategory = newMainCategoryText.value.trim();
            } else {
                mainCategory = newMainCategorySelect.value;
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
            if (newSubCategory1Select.value === 'new') {
                if (newSubCategory1Text.value.trim() === '') {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡∏°‡πà');
                    return;
                }
                subCategory1 = newSubCategory1Text.value.trim();
            } else if (newSubCategory1Select.value) {
                subCategory1 = newSubCategory1Select.value;
            } else {
                subCategory1 = '';
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            if (newSubCategory2Select.value === 'new') {
                if (newSubCategory2Text.value.trim() === '') {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÉ‡∏´‡∏°‡πà');
                    return;
                }
                subCategory2 = newSubCategory2Text.value.trim();
            } else if (newSubCategory2Select.value) {
                subCategory2 = newSubCategory2Select.value;
            } else {
                subCategory2 = '';
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                return;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                return;
            }
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            addCategory(mainCategory, subCategory1, subCategory2);
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
            newMainCategoryText.value = '';
            newSubCategory1Text.value = '';
            newSubCategory2Text.value = '';
            newMainCategorySelect.value = 'new';
            newSubCategory1Select.value = 'new';
            newSubCategory2Select.value = 'new';
            
            alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
        });
    }
    
    // Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Selects ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const newMainCategorySelect = document.getElementById('new-main-category');
    const newSubCategory1Select = document.getElementById('new-sub-category1');
    
    if (newMainCategorySelect) {
        newMainCategorySelect.addEventListener('change', function() {
            const mainCategory = this.value;
            const newMainCategoryText = document.getElementById('new-main-category-text');
            
            if (mainCategory === 'new') {
                newMainCategoryText.style.display = 'block';
                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢
                if (newSubCategory1Select) {
                    newSubCategory1Select.innerHTML = '<option value="new">+ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡∏°‡πà</option>';
                }
            } else {
                newMainCategoryText.style.display = 'none';
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                if (newSubCategory1Select) {
                    newSubCategory1Select.innerHTML = '<option value="new">+ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡∏°‡πà</option>';
                    
                    if (categories[mainCategory]) {
                        for (const subCategory1 in categories[mainCategory]) {
                            const option = document.createElement('option');
                            option.value = subCategory1;
                            option.textContent = subCategory1;
                            newSubCategory1Select.appendChild(option);
                        }
                    }
                }
            }
        });
    }
    
    if (newSubCategory1Select) {
        newSubCategory1Select.addEventListener('change', function() {
            const mainCategory = newMainCategorySelect.value;
            const subCategory1 = this.value;
            const newSubCategory1Text = document.getElementById('new-sub-category1-text');
            const newSubCategory2Select = document.getElementById('new-sub-category2');
            
            if (subCategory1 === 'new') {
                newSubCategory1Text.style.display = 'block';
                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                if (newSubCategory2Select) {
                    newSubCategory2Select.innerHTML = '<option value="new">+ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÉ‡∏´‡∏°‡πà</option>';
                }
            } else {
                newSubCategory1Text.style.display = 'none';
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                if (newSubCategory2Select && mainCategory !== 'new' && categories[mainCategory] && categories[mainCategory][subCategory1]) {
                    newSubCategory2Select.innerHTML = '<option value="new">+ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÉ‡∏´‡∏°‡πà</option>';
                    
                    for (const subCategory2 of categories[mainCategory][subCategory1]) {
                        const option = document.createElement('option');
                        option.value = subCategory2;
                        option.textContent = subCategory2;
                        newSubCategory2Select.appendChild(option);
                    }
                }
            }
        });
    }
    
    // Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const editMainCategory = document.getElementById('edit-main-category');
    const editSubCategory1 = document.getElementById('edit-sub-category1');
    const editSubCategory2 = document.getElementById('edit-sub-category2');
    
    if (editMainCategory) {
        editMainCategory.addEventListener('change', function() {
            const mainCategory = this.value;
            
            if (mainCategory) {
                updateSubCategory1Select(editSubCategory1, mainCategory);
            } else {
                editSubCategory1.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
                editSubCategory1.disabled = true;
                editSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                editSubCategory2.disabled = true;
            }
        });
    }
    
    if (editSubCategory1) {
        editSubCategory1.addEventListener('change', function() {
            const mainCategory = editMainCategory.value;
            const subCategory1 = this.value;
            
            if (mainCategory && subCategory1) {
                updateSubCategory2Select(editSubCategory2, mainCategory, subCategory1);
            } else {
                editSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                editSubCategory2.disabled = true;
            }
        });
    }
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const deleteMainCategoryBtn = document.getElementById('delete-main-category');
    const deleteSubCategory1Btn = document.getElementById('delete-sub-category1');
    const deleteSubCategory2Btn = document.getElementById('delete-sub-category2');
    
    if (deleteMainCategoryBtn) {
        deleteMainCategoryBtn.addEventListener('click', function() {
            const mainCategory = editMainCategory.value;
            
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
                return;
            }
            
            if (confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å "${mainCategory}" ‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?`)) {
                if (deleteMainCategory(mainCategory)) {
                    alert('‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    editMainCategory.value = '';
                    editSubCategory1.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
                    editSubCategory1.disabled = true;
                    editSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                    editSubCategory2.disabled = true;
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                }
            }
        });
    }
    
    if (deleteSubCategory1Btn) {
        deleteSubCategory1Btn.addEventListener('click', function() {
            const mainCategory = editMainCategory.value;
            const subCategory1 = editSubCategory1.value;
            
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                return;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
                return;
            }
            
            if (confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 "${subCategory1}" ‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?`)) {
                if (deleteSubCategory1(mainCategory, subCategory1)) {
                    alert('‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢
                    updateSubCategory1Select(editSubCategory1, mainCategory);
                    editSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                    editSubCategory2.disabled = true;
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                }
            }
        });
    }
    
    if (deleteSubCategory2Btn) {
        deleteSubCategory2Btn.addEventListener('click', function() {
            const mainCategory = editMainCategory.value;
            const subCategory1 = editSubCategory1.value;
            const subCategory2 = editSubCategory2.value;
            
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                return;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                return;
            }
            
            if (!subCategory2) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
                return;
            }
            
            if (confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 "${subCategory2}"?`)) {
                if (deleteSubCategory2(mainCategory, subCategory1, subCategory2)) {
                    alert('‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                    updateSubCategory2Select(editSubCategory2, mainCategory, subCategory1);
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2');
                }
            }
        });
    }
    
    // Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Select ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    const questionMainCategory = document.getElementById('question-main-category');
    const questionSubCategory1 = document.getElementById('question-sub-category1');
    const questionSubCategory2 = document.getElementById('question-sub-category2');
    
    if (questionMainCategory) {
        questionMainCategory.addEventListener('change', function() {
            const mainCategory = this.value;
            
            if (mainCategory) {
                updateSubCategory1Select(questionSubCategory1, mainCategory);
            } else {
                questionSubCategory1.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
                questionSubCategory1.disabled = true;
                questionSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                questionSubCategory2.disabled = true;
            }
        });
    }
    
    if (questionSubCategory1) {
        questionSubCategory1.addEventListener('change', function() {
            const mainCategory = questionMainCategory.value;
            const subCategory1 = this.value;
            
            if (mainCategory && subCategory1) {
                updateSubCategory2Select(questionSubCategory2, mainCategory, subCategory1);
            } else {
                questionSubCategory2.innerHTML = '<option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                questionSubCategory2.disabled = true;
            }
        });
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function updateQuestionSystem() {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    const saveQuestionBtn = document.getElementById('save-question');
    if (saveQuestionBtn) {
        // ‡∏î‡∏∂‡∏á event listener ‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏≠‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const oldClickEvent = saveQuestionBtn.onclick;
        
        // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ event listener ‡πÉ‡∏´‡∏°‡πà
        saveQuestionBtn.onclick = function(event) {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const mainCategory = document.getElementById('question-main-category').value;
            const subCategory1 = document.getElementById('question-sub-category1').value;
            const subCategory2 = document.getElementById('question-sub-category2').value;
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏£‡∏ö‡∏ó‡∏±‡πâ‡∏á 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                event.preventDefault();
                return false;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                event.preventDefault();
                return false;
            }
            
            if (!subCategory2) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2');
                event.preventDefault();
                return false;
            }
            
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ event listener ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            if (typeof oldClickEvent === 'function') {
                return oldClickEvent.call(this, event);
            }
        };
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡∏á Database
async function saveQuestion() {
  const questionText = document.getElementById('question-text').value.trim();
  const choiceA = document.getElementById('choice-a').value.trim();
  const choiceB = document.getElementById('choice-b').value.trim();
  const choiceC = document.getElementById('choice-c').value.trim();
  const choiceD = document.getElementById('choice-d').value.trim();
  
  const correctAnswerElem = document.querySelector('input[name="correct-answer"]:checked');
  const correctAnswer = correctAnswerElem ? correctAnswerElem.value : null;
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  if (!questionText) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°');
    return false;
  }
  
  if (!choiceA || !choiceB || !choiceC || !choiceD) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠');
    return false;
  }
  
  if (!correctAnswer) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    return false;
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const mainCategory = document.getElementById('question-main-category').value;
  const subCategory1 = document.getElementById('question-sub-category1').value;
  const subCategory2 = document.getElementById('question-sub-category2').value;
  
  if (!mainCategory || !subCategory1 || !subCategory2) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏±‡πâ‡∏á 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö');
    return false;
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  let imageValue = null;
  const imagePreview = document.getElementById('image-preview');
  if (imagePreview.src && imagePreview.src !== "about:blank" && 
      imagePreview.style.display !== 'none' &&
      (imagePreview.src.startsWith('data:') || 
       imagePreview.src.startsWith('http://') || 
       imagePreview.src.startsWith('https://'))) {
    imageValue = imagePreview.src;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
  const questionData = {
    text: questionText,
    image_url: imageValue,
    choices: JSON.stringify([
      { id: 'A', text: choiceA },
      { id: 'B', text: choiceB },
      { id: 'C', text: choiceC },
      { id: 'D', text: choiceD }
    ]),
    correct_answer: correctAnswer,
    category_main: mainCategory,
    category_sub1: subCategory1,
    category_sub2: subCategory2
  };
  
  try {
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Supabase
    const { data, error } = await supabaseClient
      .from('questions')
      .insert([questionData])
      .select();
    
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ' + error.message);
      return false;
    }
    
    console.log('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Database
    await loadQuestions();
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
    resetFiltersAndDisplay();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (tree)
    renderCategoryTree();
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
    clearForm();
    
    alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    return true;
    
  } catch (error) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    return false;
  }
}

function resetFiltersAndDisplay() {
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const filterMainCategory = document.getElementById('filter-main-category');
    const filterSubCategory1 = document.getElementById('filter-sub-category1');
    const filterSubCategory2 = document.getElementById('filter-sub-category2');
    const searchInput = document.getElementById('search-questions');
    
    if (filterMainCategory) {
        filterMainCategory.value = '';
    }
    
    if (filterSubCategory1) {
        filterSubCategory1.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
        filterSubCategory1.disabled = true;
    }
    
    if (filterSubCategory2) {
        filterSubCategory2.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        filterSubCategory2.disabled = true;
    }
    
    if (searchInput) {
        searchInput.value = '';
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
    displayFilteredQuestions([], false, true);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å Database
async function loadQuestions() {
  try {
    const { data, error } = await supabaseClient
      .from('questions')
      .select('*')
      .order('created_at', { ascending: false });
    
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:', error);
      questions = []; // ‡πÉ‡∏ä‡πâ array ‡∏ß‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
      return;
    }
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Database ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏ä‡πâ
    questions = data.map(item => ({
      id: item.id.toString(),
      text: item.text,
      image: item.image_url,
      choices: JSON.parse(item.choices),
      correctAnswer: item.correct_answer,
      category: {
        main: item.category_main,
        sub1: item.category_sub1,
        sub2: item.category_sub2
      }
    }));
    
    console.log('‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', questions.length, '‡∏Ç‡πâ‡∏≠');
    
  } catch (error) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
    questions = [];
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏≤‡∏Å Database
async function loadGameHistory() {
    try {
        const { data, error } = await supabaseClient
            .from('game_history')
            .select('*')
            .order('played_at', { ascending: false });

        if (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥:', error);
            gameHistory = [];
            filteredHistory = [];
            return;
        }

        // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Database ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏ä‡πâ
        gameHistory = data.map(item => ({
            id: item.id.toString(),
            playerName: item.player_name,
            score: item.score,
            totalQuestions: item.total_questions,
            percentage: item.percentage,
            category: JSON.parse(item.category || '{}'),
            playedAt: item.played_at,
            gameData: JSON.parse(item.game_data || '{}')
        }));

        filteredHistory = [...gameHistory];
        console.log('‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', gameHistory.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');

    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
        gameHistory = [];
        filteredHistory = [];
    }
}

// ‡∏ô‡∏≥‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayQuestions ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function displayQuestions(filtered = false, isReset = false) {
    if (filtered) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á
        applyFilters(isReset);
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏¢‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        displayFilteredQuestions(questions, false, isReset);
    }
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
function clearForm() {
  document.getElementById('question-text').value = '';
  document.getElementById('choice-a').value = '';
  document.getElementById('choice-b').value = '';
  document.getElementById('choice-c').value = '';
  document.getElementById('choice-d').value = '';
  
  // ‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤
  const radioButtons = document.querySelectorAll('input[name="correct-answer"]');
  radioButtons.forEach(radio => {
    radio.checked = false;
  });
  
  // ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const imagePreview = document.getElementById('image-preview');
  imagePreview.src = '';
  imagePreview.style.display = 'none';
  document.getElementById('question-image').value = '';
  
  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  document.getElementById('question-main-category').value = '';
  document.getElementById('question-sub-category1').value = '';
  document.getElementById('question-sub-category2').disabled = true;
  document.getElementById('question-sub-category1').disabled = true;
}
// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô deleteQuestion() ‡πÄ‡∏î‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ
async function deleteQuestion(questionId) {
    if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ?')) {
        try {
            // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Supabase Database
            const { error } = await supabaseClient
                .from('questions')
                .delete()
                .eq('id', questionId);
            
            if (error) {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ' + error.message);
                return;
            }
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Database
            await loadQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            displayQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            renderCategoryTree();
            
            console.log('‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ID:', questionId);
            alert('‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            
        } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
    }
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô editQuestion() ‡πÄ‡∏î‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ
async function editQuestion(questionId) {
    const question = questions.find(q => q.id === questionId);
    
    if (question) {
        try {
            // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('question-text').value = question.text;
            document.getElementById('choice-a').value = question.choices.find(c => c.id === 'A')?.text || '';
            document.getElementById('choice-b').value = question.choices.find(c => c.id === 'B')?.text || '';
            document.getElementById('choice-c').value = question.choices.find(c => c.id === 'C')?.text || '';
            document.getElementById('choice-d').value = question.choices.find(c => c.id === 'D')?.text || '';
            
            // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            const correctRadio = document.querySelector(`input[name="correct-answer"][value="${question.correctAnswer}"]`);
            if (correctRadio) {
                correctRadio.checked = true;
            }
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            const imagePreview = document.getElementById('image-preview');
            if (question.image) {
                imagePreview.src = question.image;
                imagePreview.style.display = 'block';
            } else {
                imagePreview.src = '';
                imagePreview.style.display = 'none';
            }
            
            // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            if (question.category) {
                const mainCategorySelect = document.getElementById('question-main-category');
                mainCategorySelect.value = question.category.main || '';
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                if (question.category.main) {
                    updateSubCategory1Select(
                        document.getElementById('question-sub-category1'),
                        question.category.main
                    );
                    
                    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                    document.getElementById('question-sub-category1').value = question.category.sub1 || '';
                    
                    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                    if (question.category.sub1) {
                        updateSubCategory2Select(
                            document.getElementById('question-sub-category2'),
                            question.category.main,
                            question.category.sub1
                        );
                        
                        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                        document.getElementById('question-sub-category2').value = question.category.sub2 || '';
                    }
                }
            }
            
            // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å Database
            const { error } = await supabaseClient
                .from('questions')
                .delete()
                .eq('id', questionId);
            
            if (error) {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ' + error.message);
                return;
            }
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Database
            await loadQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            displayQuestions();
            
            // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('question-form').scrollIntoView({ behavior: 'smooth' });
            
            // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Radio Buttons ‡πÉ‡∏´‡∏°‡πà
            setupChoiceRadioButtons();
            
            console.log('‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ID:', questionId);
            
        } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function exportAllData() {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    const exportData = {
        categories: categories,
        questions: questions
    };
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON string
    const jsonString = JSON.stringify(exportData, null, 2);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob
    const blob = new Blob([jsonString], { type: 'application/json' });
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL
    const url = URL.createObjectURL(blob);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á <a> element ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const a = document.createElement('a');
    a.href = url;
    a.download = 'quiz-data.json';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô document ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å
    document.body.appendChild(a);
    a.click();
    
    // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å document
    document.body.removeChild(a);
    
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå URL
    URL.revokeObjectURL(url);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏•‡∏ö‡πÉ‡∏ô Database ‡∏î‡πâ‡∏ß‡∏¢
async function clearAllData() {
    if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ')) {
        try {
            // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Supabase Database
            const { error } = await supabaseClient
                .from('questions')
                .delete()
                .neq('id', 0); // ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (neq ‡∏Ñ‡∏∑‡∏≠ not equal, ‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏™‡∏°‡∏≠)
            
            if (error) {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ' + error.message);
                return;
            }
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Database (‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á)
            await loadQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            displayQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            renderCategoryTree();
            
            alert('‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            
        } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï Excel
function downloadExcelTemplate() {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡πÄ‡∏£‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    const data = [
        ['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°', '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D', '‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (A, B, C, D)', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2'],
        ['‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°?', '', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D', 'A', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', '‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå']
    ];
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á workbook
    const wb = XLSX.utils.book_new();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á worksheet
    const ws = XLSX.utils.aoa_to_sheet(data);
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    const wscols = [
        {wch: 25}, // ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        {wch: 20}, // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)
        {wch: 15}, // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A
        {wch: 15}, // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B
        {wch: 15}, // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C
        {wch: 15}, // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D
        {wch: 25}, // ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        {wch: 15}, // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
        {wch: 15}, // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
        {wch: 15}  // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
    ];
    ws['!cols'] = wscols;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° worksheet ‡∏•‡∏á‡πÉ‡∏ô workbook
    XLSX.utils.book_append_sheet(wb, ws, '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    XLSX.writeFile(wb, 'quiz-template.xlsx');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function isDuplicateQuestion(questionText) {
    return questions.some(q => q.text.trim().toLowerCase() === questionText.trim().toLowerCase());
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏≤‡∏Å Excel - ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function importFromExcel(file) {
    const reader = new FileReader();
    
    reader.onload = async function(e) {
        try {
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
            const progressDiv = document.createElement('div');
            progressDiv.id = 'import-progress';
            progressDiv.style.cssText = `
                margin: 10px 0;
                padding: 15px;
                background-color: #f0f7ff;
                border-radius: 8px;
                border: 1px solid #1976d2;
                text-align: center;
            `;
            progressDiv.innerHTML = '<p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÑ‡∏ü‡∏•‡πå Excel... ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</p>';
            document.getElementById('import-excel').parentNode.appendChild(progressDiv);
            
            const data = new Uint8Array(e.target.result);
            const workbook = XLSX.read(data, { type: 'array', cellDates: true, cellText: false });
            
            // ‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ó‡πÅ‡∏£‡∏Å
            const firstSheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[firstSheetName];
            
            // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON
            const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: "", raw: false });
            
            if (jsonData.length === 0) {
                removeProgressDiv();
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel');
                return;
            }
            
            console.log("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ:", jsonData);
            updateProgressDiv('üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            
            // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
            const { validQuestions, errors, newCategoriesToCreate } = await processExcelData(jsonData);
            
            if (validQuestions.length === 0) {
                removeProgressDiv();
                showImportResult(0, errors.length, errors);
                return;
            }
            
            // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            updateProgressDiv('üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà...');
            await createNewCategories(newCategoriesToCreate);
            
            // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö batch
            updateProgressDiv('üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...');
            const { successCount, batchErrors } = await saveQuestionsInBatches(validQuestions);
            
            // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            const allErrors = [...errors, ...batchErrors];
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
            await loadCategories();
            await loadQuestions();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            renderCategoryTree();
            updateCategoryUI();
            resetFiltersAndDisplay();
            
            // ‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
            removeProgressDiv();
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            showImportResult(successCount, allErrors.length, allErrors);
            
        } catch (error) {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÑ‡∏ü„É´‡πå Excel:", error);
            removeProgressDiv();
            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÑ‡∏ü‡∏•‡πå: ${error.message}`);
        }
    };
    
    reader.onerror = function(error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå:', error);
        removeProgressDiv();
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå');
    };
    
    reader.readAsArrayBuffer(file);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Excel - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
async function processExcelData(jsonData) {
    const validQuestions = [];
    const errors = [];
    const newCategoriesToCreate = new Set();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á map ‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ
    const columnMap = {
        '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°': ['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°', 'question', 'text', '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°', '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°?'],
        '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)': ['‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)', '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', 'image', 'url', '‡∏£‡∏π‡∏õ'],
        '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A': ['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏ÅA', 'choice A', 'choiceA', 'A', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å a', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Åa'],
        '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B': ['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏ÅB', 'choice B', 'choiceB', 'B', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å b', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Åb'],
        '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C': ['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏ÅC', 'choice C', 'choiceC', 'C', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å c', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Åc'],
        '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D': ['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏ÅD', 'choice D', 'choiceD', 'D', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å d', '‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Åd'],
        '‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (A, B, C, D)': ['‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (A, B, C, D)', '‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', 'correct answer', 'answer', '‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö', '‡πÄ‡∏â‡∏•‡∏¢'],
        '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å': ['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å', 'main category', 'category', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà', '‡∏´‡∏°‡∏ß‡∏î'],
        '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1': ['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1', 'sub category 1', 'subcategory1', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢1', '‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 1', '‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢1'],
        '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2': ['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2', 'sub category 2', 'subcategory2', '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢2', '‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2', '‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢2']
    };
    
    // ‡∏´‡∏≤ key ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    function findColumnKey(row, columnType) {
        const possibleNames = columnMap[columnType];
        for (const name of possibleNames) {
            if (row[name] !== undefined) {
                return name;
            }
        }
        return null;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥
    const existingQuestions = new Set();
    questions.forEach(q => {
        if (q.category) {
            const key = `${q.text.trim().toLowerCase()}|${q.category.main}|${q.category.sub1}|${q.category.sub2}`;
            existingQuestions.add(key);
        }
    });
    
    // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß
    for (let index = 0; index < jsonData.length; index++) {
        const row = jsonData[index];
        
        try {
            // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
            const formattedRow = {};
            for (const columnType in columnMap) {
                const key = findColumnKey(row, columnType);
                formattedRow[columnType] = key ? String(row[key]).trim() : "";
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            if (!formattedRow['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°']) {
                errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°`);
                continue;
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            if (!formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A'] || !formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B'] || 
                !formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C'] || !formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D']) {
                errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ó‡∏±‡πâ‡∏á 4 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
                continue;
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            let correctAnswer = String(formattedRow['‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (A, B, C, D)']).trim().toUpperCase();
            if (!correctAnswer) {
                errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
                continue;
            }
            
            // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
            if (correctAnswer.includes('A') || correctAnswer.includes('1')) correctAnswer = 'A';
            else if (correctAnswer.includes('B') || correctAnswer.includes('2')) correctAnswer = 'B';
            else if (correctAnswer.includes('C') || correctAnswer.includes('3')) correctAnswer = 'C';
            else if (correctAnswer.includes('D') || correctAnswer.includes('4')) correctAnswer = 'D';
            
            if (!['A', 'B', 'C', 'D'].includes(correctAnswer)) {
                errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (${correctAnswer})`);
                continue;
            }
            
            // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ)
            const mainCategory = formattedRow['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å'] || '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
            const subCategory1 = formattedRow['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1'] || '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
            const subCategory2 = formattedRow['‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2'] || '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ã‡πâ‡∏≥
            const questionKey = `${formattedRow['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°'].toLowerCase()}|${mainCategory}|${subCategory1}|${subCategory2}`;
            if (existingQuestions.has(questionKey)) {
                errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß "${formattedRow['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°'].substring(0, 30)}..."`);
                continue;
            }
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
            existingQuestions.add(questionKey);
            
            // ‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
            if (!categories[mainCategory]) {
                newCategoriesToCreate.add(`main|${mainCategory}`);
            }
            if (!categories[mainCategory] || !categories[mainCategory][subCategory1]) {
                newCategoriesToCreate.add(`sub1|${mainCategory}|${subCategory1}`);
            }
            if (!categories[mainCategory] || !categories[mainCategory][subCategory1] || 
                !categories[mainCategory][subCategory1].includes(subCategory2)) {
                newCategoriesToCreate.add(`sub2|${mainCategory}|${subCategory1}|${subCategory2}`);
            }
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
            const questionData = {
                text: formattedRow['‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°'],
                image_url: formattedRow['‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (URL)'] || null,
                choices: JSON.stringify([
                    { id: 'A', text: formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å A'] },
                    { id: 'B', text: formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å B'] },
                    { id: 'C', text: formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å C'] },
                    { id: 'D', text: formattedRow['‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å D'] }
                ]),
                correct_answer: correctAnswer,
                category_main: mainCategory,
                category_sub1: subCategory1,
                category_sub2: subCategory2
            };
            
            validQuestions.push(questionData);
            
        } catch (err) {
            console.error(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}:`, err);
            errors.push(`‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 2}: ${err.message}`);
        }
    }
    
    return { validQuestions, errors, newCategoriesToCreate };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
async function createNewCategories(newCategoriesToCreate) {
    if (newCategoriesToCreate.size === 0) return;
    
    const categoriesToInsert = [];
    
    for (const categoryStr of newCategoriesToCreate) {
        const parts = categoryStr.split('|');
        const type = parts[0];
        
        if (type === 'main') {
            categoriesToInsert.push({
                name: parts[1],
                level: 1,
                parent_name: null
            });
        } else if (type === 'sub1') {
            categoriesToInsert.push({
                name: parts[2],
                level: 2,
                parent_name: parts[1]
            });
        } else if (type === 'sub2') {
            categoriesToInsert.push({
                name: parts[3],
                level: 3,
                parent_name: `${parts[1]} > ${parts[2]}`
            });
        }
    }
    
    if (categoriesToInsert.length > 0) {
        const { error } = await supabaseClient
            .from('categories')
            .insert(categoriesToInsert);
        
        if (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:', error);
            throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ: ' + error.message);
        }
        
        console.log('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', categoriesToInsert.length, '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö batch - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
async function saveQuestionsInBatches(questions) {
    const BATCH_SIZE = 25;
    let successCount = 0;
    const batchErrors = [];
    
    // ‡πÅ‡∏¢‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÜ
    const batches = [];
    for (let i = 0; i < questions.length; i += BATCH_SIZE) {
        batches.push(questions.slice(i, i + BATCH_SIZE));
    }
    
    console.log(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ${questions.length} ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÄ‡∏õ‡πá‡∏ô ${batches.length} batch`);
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏•‡∏∞ batch
    for (let i = 0; i < batches.length; i++) {
        const batch = batches[i];
        const batchNumber = i + 1;
        
        try {
            updateProgressDiv(`üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å batch ${batchNumber}/${batches.length} (${batch.length} ‡∏Ç‡πâ‡∏≠)...`);
            
            const { data, error } = await supabaseClient
                .from('questions')
                .insert(batch);
            
            if (error) {
                console.error(`Batch ${batchNumber} ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:`, error);
                batchErrors.push(`Batch ${batchNumber} (${batch.length} ‡∏Ç‡πâ‡∏≠): ${error.message}`);
            } else {
                successCount += batch.length;
                console.log(`Batch ${batchNumber} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${batch.length} ‡∏Ç‡πâ‡∏≠`);
            }
            
        } catch (err) {
            console.error(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô batch ${batchNumber}:`, err);
            batchErrors.push(`Batch ${batchNumber} (${batch.length} ‡∏Ç‡πâ‡∏≠): ${err.message}`);
        }
    }
    
    return { successCount, batchErrors };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
function updateProgressDiv(message) {
    const progressDiv = document.getElementById('import-progress');
    if (progressDiv) {
        progressDiv.innerHTML = `<p>${message}</p>`;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡πÅ‡∏ñ‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
function removeProgressDiv() {
    const progressDiv = document.getElementById('import-progress');
    if (progressDiv) {
        progressDiv.remove();
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
function showImportResult(successCount, errorCount, errors) {
    let message = `üéâ ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!\n\n`;
    message += `‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${successCount} ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°\n`;
    message += `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ: ${errorCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    if (errorCount > 0 && errors.length > 0) {
        message += `\nüìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:\n`;
        const displayErrors = errors.slice(0, 10);
        message += displayErrors.join('\n');
        
        if (errors.length > 10) {
            message += `\n... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${errors.length - 10} ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î`;
        }
    }
    
    alert(message);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function handleImageUpload(event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const imagePreview = document.getElementById('image-preview');
            imagePreview.src = e.target.result;
            imagePreview.style.display = 'block';
        };
        reader.readAsDataURL(file);
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listeners
function setupQuestionSystemEventListeners() {
    // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    const saveQuestionBtn = document.getElementById('save-question');
    if (saveQuestionBtn) {
        saveQuestionBtn.addEventListener('click', saveQuestion);
    }
    
    const clearFormBtn = document.getElementById('clear-form');
    if (clearFormBtn) {
        clearFormBtn.addEventListener('click', clearForm);
    }
    
    const questionImage = document.getElementById('question-image');
    if (questionImage) {
        questionImage.addEventListener('change', handleImageUpload);
    }
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const exportAllBtn = document.getElementById('export-all');
    if (exportAllBtn) {
        exportAllBtn.addEventListener('click', exportAllData);
    }
    
    const clearAllBtn = document.getElementById('clear-all');
    if (clearAllBtn) {
        clearAllBtn.addEventListener('click', clearAllData);
    }
    
    const downloadTemplateBtn = document.getElementById('download-template');
    if (downloadTemplateBtn) {
        downloadTemplateBtn.addEventListener('click', downloadExcelTemplate);
    }
    
    // ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î Excel
    const excelFileInput = document.getElementById('excel-file');
    if (excelFileInput) {
        excelFileInput.addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                importFromExcel(e.target.files[0]);
            }
        });
    }
    
    const importExcelBtn = document.getElementById('import-excel');
if (importExcelBtn) {
    importExcelBtn.addEventListener('click', function() {
        if (questions.length > 0) {
            if (confirm('‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏° ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                document.getElementById('excel-file').click();
            }
        } else {
            document.getElementById('excel-file').click();
        }
    });
}
}
 // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function initQuestionSystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...");
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å localStorage
    loadQuestions();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners
    setupQuestionSystemEventListeners();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    setupQuestionCategoryListeners();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Radio Buttons ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
    setupChoiceRadioButtons();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° - ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á isReset ‡πÄ‡∏õ‡πá‡∏ô true ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        displayQuestions(false, true);
    
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    updateQuestionSystem();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    updateQuestionCategorySelects();
    
    console.log("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
}
// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
function updatePlaySystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°...");
    
    // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô
    const startQuizBtn = document.getElementById('start-quiz');
    if (startQuizBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newStartQuizBtn = startQuizBtn.cloneNode(true);
        if (startQuizBtn.parentNode) {
            startQuizBtn.parentNode.replaceChild(newStartQuizBtn, startQuizBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newStartQuizBtn.addEventListener('click', startQuiz);
    }
    
    // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    const restartQuizBtn = document.getElementById('restart-quiz');
    if (restartQuizBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newRestartQuizBtn = restartQuizBtn.cloneNode(true);
        if (restartQuizBtn.parentNode) {
            restartQuizBtn.parentNode.replaceChild(newRestartQuizBtn, restartQuizBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newRestartQuizBtn.addEventListener('click', restartQuiz);
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    const submitAnswerBtn = document.getElementById('submit-answer');
    if (submitAnswerBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newSubmitAnswerBtn = submitAnswerBtn.cloneNode(true);
        if (submitAnswerBtn.parentNode) {
            submitAnswerBtn.parentNode.replaceChild(newSubmitAnswerBtn, submitAnswerBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newSubmitAnswerBtn.addEventListener('click', submitAnswer);
    }
    
    const nextQuestionBtn = document.getElementById('next-question');
    if (nextQuestionBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newNextQuestionBtn = nextQuestionBtn.cloneNode(true);
        if (nextQuestionBtn.parentNode) {
            nextQuestionBtn.parentNode.replaceChild(newNextQuestionBtn, nextQuestionBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newNextQuestionBtn.addEventListener('click', showNextQuestion);
    }
    
    const prevQuestionBtn = document.getElementById('prev-question');
    if (prevQuestionBtn) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newPrevQuestionBtn = prevQuestionBtn.cloneNode(true);
        if (prevQuestionBtn.parentNode) {
            prevQuestionBtn.parentNode.replaceChild(newPrevQuestionBtn, prevQuestionBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newPrevQuestionBtn.addEventListener('click', showPrevQuestion);
    }
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô startQuiz ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function startQuiz() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°...");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(currentGameQuestions) || currentGameQuestions.length === 0) {
        alert('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const mainCategory = document.getElementById('play-main-category').value;
    const subCategory1 = document.getElementById('play-sub-category1').value;
    const subCategory2 = document.getElementById('play-sub-category2').value;
    
    if (!canPlayerAccessCategory(mainCategory, subCategory1, subCategory2)) {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©');
        return;
    }
    
    console.log("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°: ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î =", currentGameQuestions.length);
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categorySelectionContainer = document.getElementById('category-selection-container');
    if (categorySelectionContainer) {
        categorySelectionContainer.classList.add('hidden');
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    const startScreen = document.getElementById('start-screen');
    if (startScreen) startScreen.classList.add('hidden');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    const quizScreen = document.getElementById('quiz-screen');
    if (quizScreen) quizScreen.classList.remove('hidden');
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    currentQuestionIndex = 0;
    userAnswers = {}; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏î‡∏¥‡∏°
    choiceOrderMap = {}; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    randomQuestionOrder = Array.from(Array(currentGameQuestions.length).keys());
    for (let i = randomQuestionOrder.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [randomQuestionOrder[i], randomQuestionOrder[j]] = [randomQuestionOrder[j], randomQuestionOrder[i]];
    }
    
    // ‡∏™‡∏•‡∏±‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    randomQuestionOrder.forEach(questionIndex => {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å [0, 1, 2, 3] ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö A, B, C, D
        const choiceOrder = [0, 1, 2, 3];
        
        // ‡∏™‡∏•‡∏±‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        for (let i = choiceOrder.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [choiceOrder[i], choiceOrder[j]] = [choiceOrder[j], choiceOrder[i]];
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ
        choiceOrderMap[questionIndex] = choiceOrder;
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå)
    const quizContainer = document.querySelector('.container.quiz-player');
    if (quizContainer && currentPlayer && !quizContainer.querySelector('.player-info.top-right')) {
        const playerInfo = document.createElement('div');
        playerInfo.className = 'player-info top-right';
        playerInfo.innerHTML = `
            <div class="player-name">‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: ${currentPlayer.name}</div>
        `;
        quizContainer.appendChild(playerInfo);
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    updateQuizScreen();
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateQuizScreen ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function updateQuizScreen() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°...");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(currentGameQuestions) || currentGameQuestions.length === 0) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ elements ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const currentQuestionElement = document.getElementById('current-question');
    const totalQuestionsElement = document.getElementById('total-questions');
    const quizQuestionElement = document.getElementById('quiz-question');
    const quizImageElement = document.getElementById('quiz-image');
    const quizChoicesElement = document.getElementById('quiz-choices');
    
    if (!currentQuestionElement || !totalQuestionsElement || !quizQuestionElement || 
        !quizImageElement || !quizChoicesElement) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö elements ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°");
        return;
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    currentQuestionElement.textContent = `‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà ${currentQuestionIndex + 1}`;
    totalQuestionsElement.textContent = currentGameQuestions.length;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const questionIndex = randomQuestionOrder[currentQuestionIndex];
    const currentQuestion = currentGameQuestions[questionIndex];
    
    quizQuestionElement.textContent = currentQuestion.text;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ‡πÅ‡∏•‡∏∞‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
    if (currentQuestion.image && 
        (currentQuestion.image.startsWith('data:') || 
         currentQuestion.image.startsWith('http://') || 
         currentQuestion.image.startsWith('https://'))) {
        quizImageElement.src = currentQuestion.image;
        quizImageElement.classList.remove('hidden');
    } else {
        quizImageElement.src = ''; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï src ‡πÉ‡∏´‡πâ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ï‡∏Å
        quizImageElement.classList.add('hidden');
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    quizChoicesElement.innerHTML = '';
    
    // ‡∏î‡∏∂‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏ß‡πâ
    const choiceOrder = choiceOrderMap[questionIndex] || [0, 1, 2, 3];
    console.log("‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà " + (currentQuestionIndex + 1) + ":", choiceOrder);
    
    // ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const userAnswer = userAnswers[questionIndex];
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å
    const handleOptionClick = function(selectedId) {
        console.log("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö:", selectedId, "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà", currentQuestionIndex);
        
        // ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ selected ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏õ‡∏∏‡πà‡∏°
        const buttons = quizChoicesElement.querySelectorAll('.option-btn');
        for (let i = 0; i < buttons.length; i++) {
            buttons[i].classList.remove('selected');
        }
        
        // ‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ selected
        const targetButton = quizChoicesElement.querySelector(`.option-btn[data-choice-id="${selectedId}"]`);
        if (targetButton) {
            targetButton.classList.add('selected');
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        userAnswers[questionIndex] = selectedId;
        console.log("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö:", userAnswers);
    };
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏ß‡πâ
    const choiceLabels = ['A', 'B', 'C', 'D']; // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    
    choiceOrder.forEach((index, displayIndex) => {
        if (!currentQuestion.choices || !currentQuestion.choices[index]) {
            console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà", index);
            return;
        }
        
        const choice = currentQuestion.choices[index];
        
        const button = document.createElement('button');
        button.className = 'option-btn';
        button.dataset.choiceId = choice.id; // ‡πÄ‡∏Å‡πá‡∏ö ID ‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (userAnswer === choice.id) {
            button.classList.add('selected');
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏≤‡∏° id ‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°
        button.innerHTML = `${choiceLabels[displayIndex]}. ${choice.text}`;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener
        button.onclick = function(e) {
            e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
            handleOptionClick(choice.id);
        };
        
        quizChoicesElement.appendChild(button);
    });
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
    updateNavigationButtons();
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
function updateNavigationButtons() {
    const prevButton = document.getElementById('prev-question');
    const nextButton = document.getElementById('next-question');
    const submitButton = document.getElementById('submit-answer');
    
    // ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    if (currentQuestionIndex > 0) {
        prevButton.classList.remove('hidden');
    } else {
        prevButton.classList.add('hidden');
    }
    
    if (currentQuestionIndex < currentGameQuestions.length - 1) {
        nextButton.classList.remove('hidden');
    } else {
        nextButton.classList.add('hidden');
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏™‡∏°‡∏≠ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö)
    submitButton.classList.remove('hidden');
}
// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô submitAnswer ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function submitAnswer() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö...");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(currentGameQuestions) || currentGameQuestions.length === 0) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return;
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à
    const questionIndex = randomQuestionOrder[currentQuestionIndex];
    const selectedOption = document.querySelector('.option-btn.selected');
    if (selectedOption) {
        userAnswers[questionIndex] = selectedOption.dataset.choiceId;
    }
    
    console.log(`‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${currentQuestionIndex + 1}/${currentGameQuestions.length}`);
    
    // ‡∏ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    if (currentGameQuestions.length === 1 || currentQuestionIndex >= currentGameQuestions.length - 1) {
        console.log("‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà");
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const { allAnswered, unansweredQuestions } = checkAllAnswered();
        
        if (!allAnswered) {
            // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
            alert(`‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà: ${unansweredQuestions.join(', ')} ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠`);
            
            // ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
            currentQuestionIndex = unansweredQuestions[0] - 1;
            updateQuizScreen();
        } else {
            // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            showResult();
        }
    } else {
        // ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        showNextQuestion();
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
function checkAllAnsweredAndShowResult() {
    const unansweredQuestions = [];
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    for (let i = 0; i < randomQuestionOrder.length; i++) {
        const questionIndex = randomQuestionOrder[i];
        if (!userAnswers[questionIndex]) {
            unansweredQuestions.push(i + 1); // ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
        }
    }
    
    if (unansweredQuestions.length > 0) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
        let message = '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ö‡∏≤‡∏á‡∏Ç‡πâ‡∏≠:\n';
        message += '‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà: ' + unansweredQuestions.join(', ');
        message += '\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå';
        alert(message);
        
        // ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
        currentQuestionIndex = unansweredQuestions[0] - 1;
        updateQuizScreen();
    } else {
        // ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        showResult();
    }
}
function showNextQuestion() {
    if (currentQuestionIndex < currentGameQuestions.length - 1) {
        currentQuestionIndex++;
        updateQuizScreen();
    }
}

function showPrevQuestion() {
    if (currentQuestionIndex > 0) {
        currentQuestionIndex--;
        updateQuizScreen();
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function checkAllAnswered() {
    const unansweredQuestions = [];
    
    for (let i = 0; i < randomQuestionOrder.length; i++) {
        const qIndex = randomQuestionOrder[i];
        if (!userAnswers[qIndex]) {
            unansweredQuestions.push(i + 1);
        }
    }
    
    return {
        allAnswered: unansweredQuestions.length === 0,
        unansweredQuestions: unansweredQuestions
    };
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô showResult ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function showResult() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå...");
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!Array.isArray(currentGameQuestions) || currentGameQuestions.length === 0) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        return;
    }
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î =", currentGameQuestions.length);
    console.log("‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:", userAnswers);
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    const quizScreen = document.getElementById('quiz-screen');
    if (quizScreen) quizScreen.classList.add('hidden');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const resultScreen = document.getElementById('result-screen');
    if (!resultScreen) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'result-screen'");
        return;
    }
    
    resultScreen.classList.remove('hidden');
    
    // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    let correctCount = 0;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const questionReview = resultScreen.querySelector('#question-review');
    if (!questionReview) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'question-review'");
        return;
    }
    
    questionReview.innerHTML = '';
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏£‡∏Å
    const firstQuestion = currentGameQuestions[randomQuestionOrder[0]];
    if (firstQuestion && firstQuestion.category) {
        const categoryInfo = document.createElement('div');
        categoryInfo.className = 'category-summary';
        categoryInfo.innerHTML = `
            <div class="category-title">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</div>
            <div class="category-path">${firstQuestion.category.main || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > ${firstQuestion.category.sub1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > ${firstQuestion.category.sub2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</div>
        `;
        questionReview.appendChild(categoryInfo);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
    randomQuestionOrder.forEach((questionIndex, index) => {
        const question = currentGameQuestions[questionIndex];
        const userAnswer = userAnswers[questionIndex] || ''; // ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô undefined ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
        const isCorrect = userAnswer === question.correctAnswer;
        
        if (isCorrect) {
            correctCount++;
        }
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ
        const reviewItem = document.createElement('div');
        reviewItem.className = `question-review-item ${isCorrect ? 'correct' : 'incorrect'}`;
        
        let choicesHTML = '';
        question.choices.forEach(choice => {
            const isUserSelected = choice.id === userAnswer;
            const isCorrectAnswer = choice.id === question.correctAnswer;
            
            let className = 'choice-item';
            if (isUserSelected) className += ' user-selected';
            if (isCorrectAnswer) className += ' correct-answer';
            
            let icon = '';
            if (isUserSelected && isCorrectAnswer) {
                icon = '<span class="choice-icon correct-icon">‚úì</span>';
            } else if (isUserSelected && !isCorrectAnswer) {
                icon = '<span class="choice-icon incorrect-icon">‚úó</span>';
            } else if (!isUserSelected && isCorrectAnswer) {
                icon = '<span class="choice-icon correct-icon">‚úì</span>';
            }
            
            choicesHTML += `
                <div class="${className}">
                    <span class="choice-marker">${choice.id}</span>
                    <span class="choice-text">${choice.text}</span>
                    ${icon}
                </div>
            `;
        });
        
        reviewItem.innerHTML = `
            <div class="question-number">
                <span>‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${index + 1}</span>
                <span class="question-status ${isCorrect ? 'status-correct' : 'status-incorrect'}">
                    ${isCorrect ? '‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å' : '‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î'}
                </span>
            </div>
            <div class="question-text">${question.text}</div>
            ${question.image ? `<img src="${question.image}" class="question-image">` : ''}
            <div class="choice-list">
                ${choicesHTML}
            </div>
        `;
        
        questionReview.appendChild(reviewItem);
    });
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
    const percentage = Math.round((correctCount / currentGameQuestions.length) * 100);
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const scoreElement = resultScreen.querySelector('#score');
    const maxScoreElement = resultScreen.querySelector('#max-score');
    const percentCorrectElement = resultScreen.querySelector('#percent-correct');
    const correctAnswersElement = resultScreen.querySelector('#correct-answers');
    const incorrectAnswersElement = resultScreen.querySelector('#incorrect-answers');
    const totalQuestionsStatsElement = resultScreen.querySelector('#total-questions-stats');
    
    if (scoreElement) scoreElement.textContent = correctCount;
    if (maxScoreElement) maxScoreElement.textContent = currentGameQuestions.length;
    if (percentCorrectElement) percentCorrectElement.textContent = `${percentage}%`;
    if (correctAnswersElement) correctAnswersElement.textContent = correctCount;
    if (incorrectAnswersElement) incorrectAnswersElement.textContent = currentGameQuestions.length - correctCount;
    if (totalQuestionsStatsElement) totalQuestionsStatsElement.textContent = currentGameQuestions.length;
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
    if (currentPlayer) {
        // ‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏£‡∏Å
        const category = firstQuestion ? firstQuestion.category : null;
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        saveUserGameHistory(currentPlayer, correctCount, currentGameQuestions.length, category, percentage);
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
    updatePlayScreenVisibility();
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
function restartQuiz() {
    console.log("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà...");
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const resultScreen = document.getElementById('result-screen');
    if (resultScreen) resultScreen.classList.add('hidden');
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    const quizScreen = document.getElementById('quiz-screen');
    if (quizScreen) quizScreen.classList.add('hidden');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categorySelectionContainer = document.getElementById('category-selection-container');
    if (categorySelectionContainer) {
        categorySelectionContainer.classList.remove('hidden');
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    const startScreen = document.getElementById('start-screen');
    if (startScreen) startScreen.classList.remove('hidden');
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
    currentQuestionIndex = 0;
    userAnswers = {};
    randomQuestionOrder = [];
    choiceOrderMap = {};
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏° (‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö)
    updatePlayMainCategorySelect();
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
function initPlaySystem() {
    updatePlaySystem();
    console.log('‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
}

// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
function updatePlaySystemWithCategories() {
    // ‡∏´‡∏≤ container ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    const playContent = document.getElementById('play-content');
    if (!playContent) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'play-content'");
        return;
    }

    // ‡∏´‡∏≤ startScreen ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô play-content ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    const startScreen = playContent.querySelector('#start-screen');
    if (startScreen) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ div ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!playContent.querySelector('#play-categories')) {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á div ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const categoriesDiv = document.createElement('div');
            categoriesDiv.id = 'play-categories';
            categoriesDiv.className = 'category-selection-container';
            
            categoriesDiv.innerHTML = `
                <div class="category-selection-header">
                    <h3>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô</h3>
                    <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°</p>
                </div>
                
                <div class="category-selection-form">
                    <div class="category-field">
                        <label for="play-main-category">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å</label>
                        <div class="select-wrapper">
                            <select id="play-main-category" required>
                                <option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å</option>
                            </select>
                            <div class="select-arrow"></div>
                        </div>
                    </div>
                    
                    <div class="category-field">
                        <label for="play-sub-category1">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</label>
                        <div class="select-wrapper">
                            <select id="play-sub-category1" disabled required>
                                <option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>
                            </select>
                            <div class="select-arrow"></div>
                        </div>
                    </div>
                    
                    <div class="category-field">
                        <label for="play-sub-category2">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</label>
                        <div class="select-wrapper">
                            <select id="play-sub-category2" disabled required>
                                <option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>
                            </select>
                            <div class="select-arrow"></div>
                        </div>
                    </div>
                </div>
            `;

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° start-quiz ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            const startButton = startScreen.querySelector('#start-quiz');
            if (startButton) {
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° div ‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô startScreen
                startScreen.insertBefore(categoriesDiv, startButton);
            } else {
                // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢
                startScreen.appendChild(categoriesDiv);
            }
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
            updatePlayMainCategorySelect();
            
            // Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
            const playMainCategory = document.getElementById('play-main-category');
            const playSubCategory1 = document.getElementById('play-sub-category1');
            const playSubCategory2 = document.getElementById('play-sub-category2');
            
            if (playMainCategory) {
                playMainCategory.addEventListener('change', function() {
                    const mainCategory = this.value;
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
                    playSubCategory1.value = '';
                    playSubCategory2.value = '';
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
                    playSubCategory2.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                    playSubCategory2.disabled = true;
                    
                    if (mainCategory) {
                        updateSubCategory1Select(playSubCategory1, mainCategory);
                    } else {
                        playSubCategory1.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
                        playSubCategory1.disabled = true;
                    }
                });
            }
            
            if (playSubCategory1) {
                playSubCategory1.addEventListener('change', function() {
                    const mainCategory = playMainCategory.value;
                    const subCategory1 = this.value;
                    
                    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
                    playSubCategory2.value = '';
                    
                    if (mainCategory && subCategory1) {
                        updateSubCategory2Select(playSubCategory2, mainCategory, subCategory1);
                    } else {
                        playSubCategory2.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
                        playSubCategory2.disabled = true;
                    }
                });
            }
        }
    }
    
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô
    const startQuizBtn = playContent.querySelector('#start-quiz');
    if (startQuizBtn) {
        // ‡∏î‡∏∂‡∏á event listener ‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏≠‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newStartQuiz = startQuizBtn.cloneNode(true);
        startQuizBtn.parentNode.replaceChild(newStartQuiz, startQuizBtn);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newStartQuiz.addEventListener('click', function() {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const mainCategory = document.getElementById('play-main-category').value;
            const subCategory1 = document.getElementById('play-sub-category1').value;
            const subCategory2 = document.getElementById('play-sub-category2').value;
            
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                return;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                return;
            }
            
            if (!subCategory2) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2');
                return;
            }
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            currentGameQuestions = questions.filter(q => 
                q.category && 
                q.category.main === mainCategory && 
                q.category.sub1 === subCategory1 && 
                q.category.sub2 === subCategory2
            );
            
            if (currentGameQuestions.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
                return;
            }
            
            console.log(`‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${currentGameQuestions.length} ‡∏Ç‡πâ‡∏≠`);
            
            // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
            startQuiz();
        });
    }
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updatePlayMainCategorySelect ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function updatePlayMainCategorySelect() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°...");
    
    const playMainCategory = document.getElementById('play-main-category');
    if (!playMainCategory) {
        console.warn("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'play-main-category'");
        return;
    }
    
    // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoryCount = countQuestionsInCategory();
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏°
    playMainCategory.innerHTML = '';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (placeholder) - ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const placeholderOption = document.createElement('option');
    placeholderOption.value = "";
    placeholderOption.textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å";
    placeholderOption.disabled = true;
    placeholderOption.selected = true;
    placeholderOption.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ dropdown
    playMainCategory.appendChild(placeholderOption);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    for (const mainCategory in categories) {
        const questionCount = categoryCount[mainCategory] || 0;
        const option = document.createElement('option');
        option.value = mainCategory;
        option.textContent = `${mainCategory} (${questionCount})`;
        playMainCategory.appendChild(option);
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢
    const playSubCategory1 = document.getElementById('play-sub-category1');
    const playSubCategory2 = document.getElementById('play-sub-category2');
    
    if (playSubCategory1) {
        playSubCategory1.innerHTML = '';
        const placeholder1 = document.createElement('option');
        placeholder1.value = "";
        placeholder1.textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1";
        placeholder1.disabled = true;
        placeholder1.selected = true;
        placeholder1.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ dropdown
        playSubCategory1.appendChild(placeholder1);
        playSubCategory1.disabled = true;
    }
    
    if (playSubCategory2) {
        playSubCategory2.innerHTML = '';
        const placeholder2 = document.createElement('option');
        placeholder2.value = "";
        placeholder2.textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2";
        placeholder2.disabled = true;
        placeholder2.selected = true;
        placeholder2.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ dropdown
        playSubCategory2.appendChild(placeholder2);
        playSubCategory2.disabled = true;
    }
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô enableCategoryPlaySystem ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function enableCategoryPlaySystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...");
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    updatePlayMainCategorySelect();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    setupPlayCategoryListeners();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const oldUpdateCategoryUI = updateCategoryUI;
    updateCategoryUI = function() {
        oldUpdateCategoryUI();
        updatePlayMainCategorySelect();
    };
    
    console.log("‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å enableCategoryPlaySystem
function setupPlayCategoryListeners() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°...");
    
    const playMainCategory = document.getElementById('play-main-category');
    const playSubCategory1 = document.getElementById('play-sub-category1');
    const playSubCategory2 = document.getElementById('play-sub-category2');
    
    if (!playMainCategory || !playSubCategory1 || !playSubCategory2) {
        console.warn("‡πÑ‡∏°‡πà‡∏û‡∏ö elements ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°");
        return;
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
    playMainCategory.addEventListener('change', function() {
        const mainCategory = this.value;
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
        playSubCategory1.value = '';
        playSubCategory2.value = '';
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
        playSubCategory2.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        playSubCategory2.disabled = true;
        
        if (mainCategory) {
            updateSubCategory1Select(playSubCategory1, mainCategory);
        } else {
            playSubCategory1.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
            playSubCategory1.disabled = true;
        }
    });
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
    playSubCategory1.addEventListener('change', function() {
        const mainCategory = playMainCategory.value;
        const subCategory1 = this.value;
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
        playSubCategory2.value = '';
        
        if (mainCategory && subCategory1) {
            updateSubCategory2Select(playSubCategory2, mainCategory, subCategory1);
        } else {
            playSubCategory2.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
            playSubCategory2.disabled = true;
        }
    });
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô
    const startQuizBtn = document.getElementById('start-quiz');
    if (startQuizBtn) {
        // ‡∏•‡∏ö event listeners ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newStartQuiz = startQuizBtn.cloneNode(true);
        if (startQuizBtn.parentNode) {
            startQuizBtn.parentNode.replaceChild(newStartQuiz, startQuizBtn);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        newStartQuiz.addEventListener('click', function() {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const mainCategory = document.getElementById('play-main-category').value;
            const subCategory1 = document.getElementById('play-sub-category1').value;
            const subCategory2 = document.getElementById('play-sub-category2').value;
            
            if (!mainCategory) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å');
                return;
            }
            
            if (!subCategory1) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1');
                return;
            }
            
            if (!subCategory2) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2');
                return;
            }
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            currentGameQuestions = questions.filter(q => 
                q.category && 
                q.category.main === mainCategory && 
                q.category.sub1 === subCategory1 && 
                q.category.sub2 === subCategory2
            );
            
            if (currentGameQuestions.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
                return;
            }
            
            console.log(`‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${currentGameQuestions.length} ‡∏Ç‡πâ‡∏≠`);
            
            // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
            startQuiz();
        });
    }
    
    console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô DOMContentLoaded
document.addEventListener('DOMContentLoaded', async function() {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ fade-in ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏õ‡∏£‡∏≤‡∏Å‡∏è
    document.getElementById('play-content').classList.add('fade-in');
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
    await initializeApp(); // ‡πÉ‡∏´‡∏°‡πà
});

function initPlayerSystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô...");
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    currentPlayer = null;
    userMode = null;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ)
    if (!adminProfile) {
        isAdminMode = false;
        console.log("‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô: isAdminMode =", isAdminMode);
    }
    
    // *** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö session ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏ï‡πà‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô ***
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà");
    showWelcomeScreen();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏° User Type
    updateAdminTabs();
    
    console.log("‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
function showWelcomeScreen() {
    const welcomeScreen = document.getElementById('welcome-screen');
    if (welcomeScreen) {
        welcomeScreen.classList.remove('hidden');
        welcomeScreen.style.opacity = '1';
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
function hideWelcomeScreenAndStart() {
    hideWelcomeScreen();
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ login ‡πÄ‡∏î‡∏¥‡∏°
    const oldLoginScreen = document.getElementById('login-screen');
    if (oldLoginScreen) {
        oldLoginScreen.classList.add('hidden');
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const startScreen = document.getElementById('start-screen');
    const categorySelection = document.getElementById('category-selection-container');
    
    if (startScreen) startScreen.classList.remove('hidden');
    if (categorySelection) categorySelection.classList.remove('hidden');
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI
    updateUIForUserMode();
    updatePlayMainCategorySelect();
}

function updateLoginDisplay() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô...");
    
    const loginScreen = document.getElementById('login-screen');
    const startScreen = document.getElementById('start-screen');
    const categorySelectionContainer = document.getElementById('category-selection-container');
    
    if (!loginScreen || !startScreen) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö elements ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô");
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const playTabActive = document.getElementById('play-tab').classList.contains('active');
    
    if (playTabActive) {
        if (currentPlayer) {
            // ‡∏ñ‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            loginScreen.classList.add('hidden');
            startScreen.classList.remove('hidden');
            if (categorySelectionContainer) categorySelectionContainer.classList.remove('hidden');
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏Å‡∏°
            const quizContainer = document.querySelector('.container.quiz-player');
            if (quizContainer && !quizContainer.querySelector('.player-info.top-right')) {
                const playerInfo = document.createElement('div');
                playerInfo.className = 'player-info top-right';
                playerInfo.innerHTML = `
                    <div class="player-name">‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: ${currentPlayer.name}</div>
                `;
                quizContainer.appendChild(playerInfo);
            }
        } else {
            // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ
            loginScreen.classList.remove('hidden');
            startScreen.classList.add('hidden');
            if (categorySelectionContainer) categorySelectionContainer.classList.add('hidden');
        }
    } else {
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡∏≠‡∏∑‡πà‡∏ô
        loginScreen.classList.add('hidden');
    }
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå JavaScript ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
function updatePlayScreenVisibility() {
    const resultScreen = document.getElementById('result-screen');
    const quizScreen = document.getElementById('quiz-screen');
    const categorySelectionContainer = document.getElementById('category-selection-container');
    const startScreen = document.getElementById('start-screen');
    const loginScreen = document.getElementById('login-screen');
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ element ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÉ‡∏´‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏¢
    if (!resultScreen || !categorySelectionContainer || !startScreen) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö elements ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°");
        return;
    }
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    if (!currentPlayer) {
        // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        if (loginScreen) loginScreen.classList.remove('hidden');
        startScreen.classList.add('hidden');
        categorySelectionContainer.classList.add('hidden');
        quizScreen.classList.add('hidden');
        resultScreen.classList.add('hidden');
        return;
    }
    
    // 2. ‡∏ñ‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    if (loginScreen) loginScreen.classList.add('hidden');
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!resultScreen.classList.contains('hidden')) {
        // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        startScreen.classList.add('hidden');
        categorySelectionContainer.classList.add('hidden');
        quizScreen.classList.add('hidden');
    } else if (!quizScreen.classList.contains('hidden')) {
        // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏≠‡∏¢‡∏π‡πà ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        startScreen.classList.add('hidden');
        categorySelectionContainer.classList.add('hidden');
        resultScreen.classList.add('hidden');
    } else {
        // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        startScreen.classList.remove('hidden');
        categorySelectionContainer.classList.remove('hidden');
        resultScreen.classList.add('hidden');
        quizScreen.classList.add('hidden');
    }
}

async function loginPlayer() {
    const playerNameInput = document.getElementById('player-name');
    const rememberPlayer = document.getElementById('remember-player');
    
    if (!playerNameInput) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'player-name'");
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const playerName = playerNameInput.value.trim();
    if (!playerName) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô');
        return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (playerName.toLowerCase() === 'admin') {
        showAdminLoginForm();
        return;
    }
    
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ admin
    if (playerName.toLowerCase().includes('admin')) {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "admin" ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô');
        return;
    }
    
    try {
        // *** ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: Clear session admin ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ***
        console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á clear admin session ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô...");
        await supabaseClient.auth.signOut();
        console.log("‚úÖ Clear admin session ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } catch (error) {
        console.log("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ admin session ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á clear:", error.message);
    }
    
    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ signOut ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
    await new Promise(resolve => setTimeout(resolve, 500));
    
    // *** ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ***
    isAdminMode = false;
    currentUser = null;
    adminProfile = null;
    
    // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    currentPlayer = {
        name: playerName,
        loginTime: new Date().toISOString(),
        avatar: getPlayerInitials(playerName),
        isGuest: true // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Guest
    };
    
    console.log("üéÆ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤:", playerName);
    console.log("üîí isAdminMode:", isAdminMode, "adminProfile:", adminProfile);
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏•‡∏á‡πÉ‡∏ô localStorage ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏à‡∏≥‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô"
    if (rememberPlayer && rememberPlayer.checked) {
        localStorage.setItem('quiz-player-name', playerName);
    } else if (rememberPlayer && !rememberPlayer.checked) {
        localStorage.removeItem('quiz-player-name');
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
    const loginScreen = document.getElementById('login-screen');
    const startScreen = document.getElementById('start-screen');
    const categorySelectionContainer = document.getElementById('category-selection-container');
    
    if (loginScreen) loginScreen.classList.add('hidden');
    if (startScreen) startScreen.classList.remove('hidden');
    if (categorySelectionContainer) categorySelectionContainer.classList.remove('hidden');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô
    const quizContainer = document.querySelector('.container.quiz-player');
    if (quizContainer && !quizContainer.querySelector('.player-info.top-right')) {
        const playerInfo = document.createElement('div');
        playerInfo.className = 'player-info top-right';
        playerInfo.innerHTML = `
            <div class="player-name">‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: ${currentPlayer.name}</div>
        `;
        quizContainer.appendChild(playerInfo);
    }
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
    updateLoginDisplay();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    updateAdminTabs();
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    updatePlayMainCategorySelect();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
function showAdminLoginForm() {
    // ‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingForm = document.getElementById('admin-login-overlay');
    if (existingForm) {
        existingForm.remove();
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    const overlay = document.createElement('div');
    overlay.id = 'admin-login-overlay';
    overlay.className = 'admin-password-overlay';
    
    overlay.innerHTML = `
        <div class="admin-password-modal">
            <div class="admin-password-header">
                <h3>üîê ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h3>
                <button class="close-btn" onclick="closeAdminLoginForm()">√ó</button>
            </div>
            <div class="admin-password-body">
                <div style="margin-bottom: 15px;">
                    <label for="admin-email-input">‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</label>
                    <input type="email" id="admin-email-input" class="admin-password-input" placeholder="admin@yoursite.com">
                </div>
                <div style="margin-bottom: 15px;">
                    <label for="admin-password-input">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</label>
                    <input type="password" id="admin-password-input" class="admin-password-input" placeholder="‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà">
                </div>
                <div class="admin-password-error" id="admin-login-error" style="display: none;">
                    ‚ùå ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                </div>
            </div>
            <div class="admin-password-actions">
                <button class="admin-password-confirm" onclick="submitAdminLogin()">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
                <button class="admin-password-cancel" onclick="closeAdminLoginForm()">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(overlay);
    
    // ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà input ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    setTimeout(() => {
        const emailInput = document.getElementById('admin-email-input');
        if (emailInput) {
            emailInput.focus();
            
            // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î Enter
            emailInput.addEventListener('keyup', function(e) {
                if (e.key === 'Enter') {
                    document.getElementById('admin-password-input').focus();
                }
            });
            
            document.getElementById('admin-password-input').addEventListener('keyup', function(e) {
                if (e.key === 'Enter') {
                    submitAdminLogin();
                }
            });
        }
    }, 100);
    
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô scroll
    document.body.style.overflow = 'hidden';
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
function closeAdminLoginForm() {
    const overlay = document.getElementById('admin-login-overlay');
    if (overlay) {
        overlay.remove();
    }
    document.body.style.overflow = '';
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    const playerNameInput = document.getElementById('player-name');
    if (playerNameInput) {
        playerNameInput.value = '';
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
async function submitAdminLogin() {
    const emailInput = document.getElementById('admin-email-input');
    const passwordInput = document.getElementById('admin-password-input');
    const errorDiv = document.getElementById('admin-login-error');
    
    const email = emailInput.value.trim();
    const password = passwordInput.value.trim();
    
    if (!email || !password) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
        return;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á loading
    const confirmBtn = document.querySelector('.admin-password-confirm');
    const originalText = confirmBtn.textContent;
    confirmBtn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...';
    confirmBtn.disabled = true;
    
    // ‡∏•‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    const success = await loginAdmin(email, password);
    
    if (success) {
        // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        closeAdminLoginForm();
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å
        const loginScreen = document.getElementById('login-screen');
        if (loginScreen) loginScreen.classList.add('hidden');
        
        alert('‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô! üëë');
        
    } else {
        // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        errorDiv.style.display = 'block';
        passwordInput.value = '';
        passwordInput.focus();
        
        // ‡πÄ‡∏Ç‡∏¢‡πà‡∏≤ modal
        const modal = document.querySelector('.admin-password-modal');
        if (modal) {
            modal.classList.add('shake');
            setTimeout(() => {
                modal.classList.remove('shake');
            }, 500);
        }
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏•‡∏±‡∏á 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setTimeout(() => {
            errorDiv.style.display = 'none';
        }, 3000);
    }
    
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°
    confirmBtn.textContent = originalText;
    confirmBtn.disabled = false;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
function getPlayerInitials(name) {
    // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÜ
    const icons = [
        'üéÆ', 'üéØ', 'üß†', 'üéì', 'üåü', 'üèÜ', 'üìö', 'üòä', 
        'üöÄ', 'üé®', 'üîç', 'üí°', 'üé™', 'üé≠', 'üé¨', 'üéß',
        'üåà', 'ü¶Ñ', 'üê±', 'üê∂', 'ü¶ä', 'ü¶Å', 'üêº', 'üê∞'
    ];
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    if (!name) return '?';
    
    // ‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ (‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô seed ‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
    let sum = 0;
    for (let i = 0; i < name.length; i++) {
        sum += name.charCodeAt(i);
    }
    
    // ‡πÉ‡∏ä‡πâ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™ ASCII ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
    const index = sum % icons.length;
    return icons[index];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
function displayQuestionsEnhanced(filtered = false) {
    const questionsContainer = document.getElementById('questions-container');
    const questionCount = document.getElementById('question-count');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const filterMainCategory = document.getElementById('filter-main-category');
    const mainCategoryValue = filterMainCategory ? filterMainCategory.value : '';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const showAllQuestions = mainCategoryValue === 'all';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const searchInput = document.getElementById('search-questions');
    const hasSearch = searchInput && searchInput.value.trim() !== '';
    
    // ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏ñ‡πâ‡∏≤ filtered=true ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const filterSelected = filtered || showAllQuestions || hasSearch;
    
    if (questionsContainer) {
        questionsContainer.innerHTML = '';
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        if (questions.length === 0) {
            questionsContainer.innerHTML = `
                <div class="empty-state">
                    <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</p>
                    <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏•‡∏¢!</p>
                </div>
            `;
        } 
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á (‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)
        else if (!filterSelected && mainCategoryValue === '') {
            questionsContainer.innerHTML = `
                <div class="empty-state">
                    <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°</p>
                    <p>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${questions.length} ‡∏Ç‡πâ‡∏≠</p>
                </div>
            `;
        }
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
        else {
            questions.forEach((question, index) => {
                const questionCard = document.createElement('div');
                questionCard.className = 'question-card';
                
                let choicesHTML = '<div class="choices">';
                question.choices.forEach(choice => {
                    const isCorrect = choice.id === question.correctAnswer;
                    choicesHTML += `
                        <div class="choice ${isCorrect ? 'correct' : ''}">
                            ${choice.id}: ${choice.text}
                        </div>
                    `;
                });
                choicesHTML += '</div>';
                
                let categoryText = `
                    <div class="question-category">
                        <strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> 
                        ${question.category?.main || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > 
                        ${question.category?.sub1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > 
                        ${question.category?.sub2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                    </div>
                `;
                
                questionCard.innerHTML = `
                    <h3>‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà ${index + 1}: ${question.text}</h3>
                    ${question.image ? `<img src="${question.image}" class="question-image">` : ''}
                    ${choicesHTML}
                    ${categoryText}
                    <div class="question-actions">
                        <button class="action-btn edit-btn" onclick="editQuestion('${question.id}')">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                        <button class="action-btn delete-btn" onclick="deleteQuestion('${question.id}')">‡∏•‡∏ö</button>
                    </div>
                `;
                
                questionsContainer.appendChild(questionCard);
            });
        }
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        if (questionCount) {
            questionCount.textContent = questions.length;
        }
    }
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function displayAllQuestions(container) {
    questions.forEach((question, index) => {
        container.appendChild(createQuestionCard(question, index));
    });
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
function displayFilteredQuestions(container) {
    questions.forEach((question, index) => {
        container.appendChild(createQuestionCard(question, index));
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° (‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ã‡πâ‡∏≥)
function createQuestionCard(question, index) {
    const questionCard = document.createElement('div');
    questionCard.className = 'question-card';
    
    let choicesHTML = '<div class="choices">';
    question.choices.forEach(choice => {
        const isCorrect = choice.id === question.correctAnswer;
        choicesHTML += `
            <div class="choice ${isCorrect ? 'correct' : ''}">
                ${choice.id}: ${choice.text}
            </div>
        `;
    });
    choicesHTML += '</div>';
    
    let categoryText = `
        <div class="question-category">
            <strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> 
            ${question.category?.main || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > 
            ${question.category?.sub1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > 
            ${question.category?.sub2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
        </div>
    `;
    
    questionCard.innerHTML = `
        <h3>‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà ${index + 1}: ${question.text}</h3>
        ${question.image ? `<img src="${question.image}" class="question-image">` : ''}
        ${choicesHTML}
        ${categoryText}
        <div class="question-actions">
            <button class="action-btn edit-btn" onclick="editQuestion('${question.id}')">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
            <button class="action-btn delete-btn" onclick="deleteQuestion('${question.id}')">‡∏•‡∏ö</button>
        </div>
    `;
    
    return questionCard;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
function setupSearchQuestions() {
    const searchInput = document.getElementById('search-questions');
    if (searchInput) {
        // ‡∏•‡πâ‡∏≤‡∏á event handler ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const newSearchInput = searchInput.cloneNode(true);
        if (searchInput.parentNode) {
            searchInput.parentNode.replaceChild(newSearchInput, searchInput);
        }
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event handler ‡πÉ‡∏´‡∏°‡πà - ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå
        let searchTimeout = null;
        newSearchInput.addEventListener('input', function() {
            // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            if (searchTimeout) {
                clearTimeout(searchTimeout);
            }
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏™‡∏£‡πá‡∏à 300ms
            searchTimeout = setTimeout(() => {
                applyFilters();
                searchTimeout = null;
            }, 300);
        });
    }
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', function() {
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    setupSearchQuestions();
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function setupCategoryFilter() {
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏á
    const questionFilters = document.querySelector('.question-filters');
    if (questionFilters) {
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        const categoryFilter = document.createElement('div');
        categoryFilter.className = 'category-filter-container';
        categoryFilter.innerHTML = `
            <div class="filter-group">
                <select id="filter-main-category" class="filter-select">
                    <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å</option>
                </select>
            </div>
            <div class="filter-group">
                <select id="filter-sub-category1" class="filter-select" disabled>
                    <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>
                </select>
            </div>
            <div class="filter-group">
                <select id="filter-sub-category2" class="filter-select" disabled>
                    <option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>
                </select>
            </div>
            <button id="reset-filters" class="filter-btn">‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á</button>
        `;
        
        questionFilters.appendChild(categoryFilter);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
        const filterMainCategory = document.getElementById('filter-main-category');
        const filterSubCategory1 = document.getElementById('filter-sub-category1');
        const filterSubCategory2 = document.getElementById('filter-sub-category2');
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
        updateFilterMainCategory();
        
        // Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà - ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
        filterMainCategory.addEventListener('change', function() {
            const mainCategory = this.value;
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
            filterSubCategory1.value = '';
            filterSubCategory2.value = '';
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢
            filterSubCategory1.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
            filterSubCategory2.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
            filterSubCategory2.disabled = true;
            
            if (mainCategory) {
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                updateFilterSubCategory1(mainCategory);
                filterSubCategory1.disabled = false;
            } else {
                filterSubCategory1.disabled = true;
            }
            
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô - ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
            applyFilters();
        });
        
        filterSubCategory1.addEventListener('change', function() {
            const mainCategory = filterMainCategory.value;
            const subCategory1 = this.value;
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
            filterSubCategory2.value = '';
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            filterSubCategory2.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
            
            if (mainCategory && subCategory1) {
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                updateFilterSubCategory2(mainCategory, subCategory1);
                filterSubCategory2.disabled = false;
            } else {
                filterSubCategory2.disabled = true;
            }
            
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô - ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
            applyFilters();
        });
        
        filterSubCategory2.addEventListener('change', function() {
            // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô - ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
            applyFilters();
        });
        
        // ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
const resetFiltersBtn = document.getElementById('reset-filters');
if (resetFiltersBtn) {
    resetFiltersBtn.addEventListener('click', function() {
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        filterMainCategory.value = '';
        filterSubCategory1.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</option>';
        filterSubCategory2.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</option>';
        filterSubCategory1.disabled = true;
        filterSubCategory2.disabled = true;
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        const searchInput = document.getElementById('search-questions');
        if (searchInput) {
            searchInput.value = '';
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° - ‡∏™‡πà‡∏á true ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        displayQuestions(false, true);
    });
}
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
function updateFilterMainCategory() {
    const filterMainCategory = document.getElementById('filter-main-category');
    if (filterMainCategory) {
        // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏°
        filterMainCategory.innerHTML = '';
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (placeholder) ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏î‡πÜ
        const placeholderOption = document.createElement('option');
        placeholderOption.value = "";
        placeholderOption.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà";
        placeholderOption.selected = true;
        placeholderOption.disabled = true;
        filterMainCategory.appendChild(placeholderOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
        const allQuestionsOption = document.createElement('option');
        allQuestionsOption.value = "all";
        allQuestionsOption.textContent = "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î";
        filterMainCategory.appendChild(allQuestionsOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        for (const mainCategory in categories) {
            const option = document.createElement('option');
            option.value = mainCategory;
            option.textContent = mainCategory;
            filterMainCategory.appendChild(option);
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
function updateFilterSubCategory1(mainCategory) {
    const filterSubCategory1 = document.getElementById('filter-sub-category1');
    if (filterSubCategory1 && mainCategory) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
        const firstOption = filterSubCategory1.options[0];
        filterSubCategory1.innerHTML = '';
        filterSubCategory1.appendChild(firstOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        if (categories[mainCategory]) {
            for (const subCategory1 in categories[mainCategory]) {
                const option = document.createElement('option');
                option.value = subCategory1;
                option.textContent = subCategory1;
                filterSubCategory1.appendChild(option);
            }
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
function updateFilterSubCategory2(mainCategory, subCategory1) {
    const filterSubCategory2 = document.getElementById('filter-sub-category2');
    if (filterSubCategory2 && mainCategory && subCategory1) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ
        const firstOption = filterSubCategory2.options[0];
        filterSubCategory2.innerHTML = '';
        filterSubCategory2.appendChild(firstOption);
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        if (categories[mainCategory] && categories[mainCategory][subCategory1]) {
            for (const subCategory2Item of categories[mainCategory][subCategory1]) {
                const option = document.createElement('option');
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô object ‡∏´‡∏£‡∏∑‡∏≠ string
                if (typeof subCategory2Item === 'object' && subCategory2Item.name) {
                    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô object ‡πÉ‡∏´‡∏°‡πà
                    option.value = subCategory2Item.name;
                    option.textContent = subCategory2Item.name;
                } else {
                    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏Å‡πà‡∏≤ (backward compatibility)
                    option.value = subCategory2Item;
                    option.textContent = subCategory2Item;
                }
                
                filterSubCategory2.appendChild(option);
            }
        }
    }
}

// ‡∏ô‡∏≥‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô applyFilters ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function applyFilters(isReset = false) {
    const searchInput = document.getElementById('search-questions');
    const filterMainCategory = document.getElementById('filter-main-category');
    const filterSubCategory1 = document.getElementById('filter-sub-category1');
    const filterSubCategory2 = document.getElementById('filter-sub-category2');
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï ‡∏™‡πà‡∏á‡∏≠‡∏≤‡πÄ‡∏£‡∏¢‡πå‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    if (isReset) {
        displayFilteredQuestions([], true, true);
        return;
    }
    
    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
    const searchTerm = searchInput ? searchInput.value.toLowerCase().trim() : '';
    const mainCategory = filterMainCategory ? filterMainCategory.value : '';
    const subCategory1 = filterSubCategory1 ? filterSubCategory1.value : '';
    const subCategory2 = filterSubCategory2 ? filterSubCategory2.value : '';
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏≤‡πÄ‡∏£‡∏¢‡πå questions ‡πÄ‡∏î‡∏¥‡∏°
    let filteredQuestions = questions.filter(question => {
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        const matchesSearch = searchTerm === '' || 
            question.text.toLowerCase().includes(searchTerm) || 
            question.choices.some(choice => choice.text.toLowerCase().includes(searchTerm)) ||
            (question.category?.main && question.category.main.toLowerCase().includes(searchTerm)) ||
            (question.category?.sub1 && question.category.sub1.toLowerCase().includes(searchTerm)) ||
            (question.category?.sub2 && question.category.sub2.toLowerCase().includes(searchTerm));
        
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        if (mainCategory === 'all') {
            return matchesSearch; // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        }
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô) ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        if (mainCategory === '') {
            return false;
        }
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        const matchesMainCategory = question.category?.main && question.category.main === mainCategory;
        const matchesSubCategory1 = subCategory1 === '' || 
            (question.category?.sub1 && question.category.sub1 === subCategory1);
        const matchesSubCategory2 = subCategory2 === '' || 
            (question.category?.sub2 && question.category.sub2 === subCategory2);
        
        return matchesSearch && matchesMainCategory && matchesSubCategory1 && matchesSubCategory2;
    });
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    displayFilteredQuestions(filteredQuestions, true);
}

// ‡∏ô‡∏≥‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayFilteredQuestions ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function displayFilteredQuestions(filteredQuestions, filtered = true, isReset = false) {
    const questionsContainer = document.getElementById('questions-container');
    const questionCount = document.getElementById('question-count');
    
    if (questionsContainer) {
        questionsContainer.innerHTML = '';
        
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
        if (isReset) {
            questionsContainer.innerHTML = `
                <div class="empty-state">
                    <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°</p>
                    <p>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${questions.length} ‡∏Ç‡πâ‡∏≠</p>
                </div>
            `;
        }
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
        else if (filteredQuestions.length === 0) {
            if (filtered) {
                questionsContainer.innerHTML = `
                    <div class="empty-state">
                        <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á</p>
                        <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á</p>
                    </div>
                `;
            } else {
                questionsContainer.innerHTML = `
                    <div class="empty-state">
                        <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</p>
                        <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏•‡∏¢!</p>
                    </div>
                `;
            }
        } else {
            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
            filteredQuestions.forEach((question, index) => {
                questionsContainer.appendChild(createQuestionCard(question, index));
            });
        }
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        if (questionCount) {
            if (isReset) {
                questionCount.textContent = questions.length;
            } else if (filtered && filteredQuestions.length !== questions.length) {
                questionCount.textContent = `${filteredQuestions.length}/${questions.length}`;
            } else {
                questionCount.textContent = questions.length;
            }
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function countQuestionsInCategory() {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoryCount = {};
    
    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    questions.forEach(question => {
        if (!question.category) return;
        
        const { main, sub1, sub2 } = question.category;
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        const mainKey = main;
        const sub1Key = `${main}|${sub1}`;
        const sub2Key = `${main}|${sub1}|${sub2}`;
        
        // ‡∏ô‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
        if (!categoryCount[mainKey]) categoryCount[mainKey] = 0;
        categoryCount[mainKey]++;
        
        // ‡∏ô‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
        if (!categoryCount[sub1Key]) categoryCount[sub1Key] = 0;
        categoryCount[sub1Key]++;
        
        // ‡∏ô‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
        if (!categoryCount[sub2Key]) categoryCount[sub2Key] = 0;
        categoryCount[sub2Key]++;
    });
    
    return categoryCount;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏ö‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô
function renderCategoryTree() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...");
    
    // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoryCount = countQuestionsInCategory();
    
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å container ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    const container = document.getElementById('category-tree-container');
    if (!container) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 'category-tree-container'");
        return;
    }
    
    // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°
    container.innerHTML = '';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
    for (const mainCategory in categories) {
        const mainCount = categoryCount[mainCategory] || 0;
        const mainCategoryDiv = document.createElement('div');
        mainCategoryDiv.className = 'category-item main-category';
        mainCategoryDiv.dataset.category = mainCategory;
        
        mainCategoryDiv.innerHTML = `
            <div class="category-header">
                <span class="toggle-icon">‚ñ∂</span>
                <span class="category-name">${mainCategory}</span>
                <span class="question-count">(${mainCount})</span>
                <div class="category-actions">
                    <button class="edit-btn small-btn" data-action="edit" data-type="main" data-category="${mainCategory}">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button class="delete-btn small-btn" data-action="delete" data-type="main" data-category="${mainCategory}">‡∏•‡∏ö</button>
                </div>
            </div>
            <div class="sub-categories" style="display: none;"></div>
        `;
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å elements ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
        const header = mainCategoryDiv.querySelector('.category-header');
        const subCategoriesDiv = mainCategoryDiv.querySelector('.sub-categories');
        const toggleIcon = mainCategoryDiv.querySelector('.toggle-icon');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢/‡∏´‡∏∏‡∏ö
        header.addEventListener('click', function(e) {
            // ‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏≤‡∏¢/‡∏´‡∏∏‡∏ö‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö
            if (e.target.tagName === 'BUTTON' || e.target.closest('button')) {
                return;
            }
            
            // ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢
            const isHidden = subCategoriesDiv.style.display === 'none';
            subCategoriesDiv.style.display = isHidden ? 'block' : 'none';
            toggleIcon.textContent = isHidden ? '‚ñº' : '‚ñ∂';
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÇ‡∏´‡∏•‡∏î
            if (isHidden && subCategoriesDiv.children.length === 0) {
                renderSubCategories1(mainCategory, subCategoriesDiv, categoryCount);
            }
        });
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏•‡∏ö
        mainCategoryDiv.querySelectorAll('button').forEach(button => {
            button.addEventListener('click', function(e) {
                e.stopPropagation(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
                
                const action = this.dataset.action;
                const type = this.dataset.type;
                const category = this.dataset.category;
                
                if (action === 'edit') {
                    showEditCategoryForm(type, category);
                } else if (action === 'delete') {
                    confirmDeleteCategory(type, category);
                }
            });
        });
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô container
        container.appendChild(mainCategoryDiv);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà
    const addCategoryButton = document.createElement('div');
    addCategoryButton.className = 'add-category-btn';
    addCategoryButton.innerHTML = '<button class="add-btn">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å</button>';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    addCategoryButton.querySelector('button').addEventListener('click', function() {
        showAddCategoryForm('main');
    });
    
    container.appendChild(addCategoryButton);
    
    console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
function renderSubCategories1(mainCategory, container, categoryCount) {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏Ç‡∏≠‡∏á", mainCategory);
    
    if (!categories[mainCategory]) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å:", mainCategory);
        return;
    }
    
    // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°
    container.innerHTML = '';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
    for (const subCategory1 in categories[mainCategory]) {
        const sub1Key = `${mainCategory}|${subCategory1}`;
        const sub1Count = categoryCount[sub1Key] || 0;
        
        const subCategory1Div = document.createElement('div');
        subCategory1Div.className = 'category-item sub-category-1';
        subCategory1Div.dataset.category = subCategory1;
        subCategory1Div.dataset.parent = mainCategory;
        
        subCategory1Div.innerHTML = `
            <div class="category-header">
                <span class="toggle-icon">‚ñ∂</span>
                <span class="category-name">${subCategory1}</span>
                <span class="question-count">(${sub1Count})</span>
                <div class="category-actions">
                    <button class="edit-btn small-btn" data-action="edit" data-type="sub1" data-category="${subCategory1}" data-parent="${mainCategory}">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button class="delete-btn small-btn" data-action="delete" data-type="sub1" data-category="${subCategory1}" data-parent="${mainCategory}">‡∏•‡∏ö</button>
                </div>
            </div>
            <div class="sub-categories sub-categories-2" style="display: none;"></div>
        `;
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å elements ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
        const header = subCategory1Div.querySelector('.category-header');
        const subCategoriesDiv = subCategory1Div.querySelector('.sub-categories-2');
        const toggleIcon = subCategory1Div.querySelector('.toggle-icon');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢/‡∏´‡∏∏‡∏ö
        header.addEventListener('click', function(e) {
            // ‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏≤‡∏¢/‡∏´‡∏∏‡∏ö‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö
            if (e.target.tagName === 'BUTTON' || e.target.closest('button')) {
                return;
            }
            
            // ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2
            const isHidden = subCategoriesDiv.style.display === 'none';
            subCategoriesDiv.style.display = isHidden ? 'block' : 'none';
            toggleIcon.textContent = isHidden ? '‚ñº' : '‚ñ∂';
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÇ‡∏´‡∏•‡∏î
            if (isHidden && subCategoriesDiv.children.length === 0) {
                renderSubCategories2(mainCategory, subCategory1, subCategoriesDiv, categoryCount);
            }
        });
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏•‡∏ö
        subCategory1Div.querySelectorAll('button').forEach(button => {
            button.addEventListener('click', function(e) {
                e.stopPropagation(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
                
                const action = this.dataset.action;
                const type = this.dataset.type;
                const category = this.dataset.category;
                const parent = this.dataset.parent;
                
                if (action === 'edit') {
                    showEditCategoryForm(type, category, parent);
                } else if (action === 'delete') {
                    confirmDeleteCategory(type, category, parent);
                }
            });
        });
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô container
        container.appendChild(subCategory1Div);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡∏°‡πà
    const addCategoryButton = document.createElement('div');
    addCategoryButton.className = 'add-category-btn';
    addCategoryButton.innerHTML = `<button class="add-btn">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1</button>`;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    addCategoryButton.querySelector('button').addEventListener('click', function() {
        showAddCategoryForm('sub1', mainCategory);
    });
    
    container.appendChild(addCategoryButton);
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
function renderSubCategories2(mainCategory, subCategory1, container, categoryCount) {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏Ç‡∏≠‡∏á", mainCategory, ">", subCategory1);
    
    if (!categories[mainCategory] || !categories[mainCategory][subCategory1]) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏:", mainCategory, ">", subCategory1);
        return;
    }
    
    // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°
    container.innerHTML = '';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 (‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô object ‡πÅ‡∏•‡πâ‡∏ß)
    for (const subCategory2Item of categories[mainCategory][subCategory1]) {
        // subCategory2Item ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô {name: "‡∏ä‡∏∑‡πà‡∏≠", is_locked: true/false}
        const subCategory2Name = subCategory2Item.name;
        const isLocked = subCategory2Item.is_locked || false;
        
        const sub2Key = `${mainCategory}|${subCategory1}|${subCategory2Name}`;
        const sub2Count = categoryCount[sub2Key] || 0;
        
        const subCategory2Div = document.createElement('div');
        subCategory2Div.className = 'category-item sub-category-2';
        subCategory2Div.dataset.category = subCategory2Name;
        subCategory2Div.dataset.parent = subCategory1;
        subCategory2Div.dataset.grandparent = mainCategory;
        
        // ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏•‡πá‡∏≠‡∏Å
        const lockIcon = isLocked ? ' üîí' : ' üîì';
        
        subCategory2Div.innerHTML = `
            <div class="category-header">
                <span class="category-name">${subCategory2Name}${lockIcon}</span>
                <span class="question-count">(${sub2Count})</span>
                <div class="category-actions">
                    <button class="edit-btn small-btn" data-action="edit" data-type="sub2" data-category="${subCategory2Name}" data-parent="${subCategory1}" data-grandparent="${mainCategory}">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button class="delete-btn small-btn" data-action="delete" data-type="sub2" data-category="${subCategory2Name}" data-parent="${subCategory1}" data-grandparent="${mainCategory}">‡∏•‡∏ö</button>
                    <button class="lock-btn small-btn ${isLocked ? 'locked' : 'unlocked'}" data-action="toggle-lock" data-type="sub2" data-category="${subCategory2Name}" data-parent="${subCategory1}" data-grandparent="${mainCategory}" data-locked="${isLocked}">
                        ${isLocked ? '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å' : '‡∏•‡πá‡∏≠‡∏Å'}
                    </button>
                </div>
            </div>
        `;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç, ‡∏•‡∏ö ‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å
        subCategory2Div.querySelectorAll('button').forEach(button => {
            button.addEventListener('click', function(e) {
                e.stopPropagation(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
                
                const action = this.dataset.action;
                const type = this.dataset.type;
                const category = this.dataset.category;
                const parent = this.dataset.parent;
                const grandparent = this.dataset.grandparent;
                
                if (action === 'edit') {
                    showEditCategoryForm(type, category, grandparent, parent);
                } else if (action === 'delete') {
                    confirmDeleteCategory(type, category, grandparent, parent);
                } else if (action === 'toggle-lock') {
                    const isCurrentlyLocked = this.dataset.locked === 'true';
                    toggleCategoryLock(grandparent, parent, category, !isCurrentlyLocked);
                }
            });
        });
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô container
        container.appendChild(subCategory2Div);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÉ‡∏´‡∏°‡πà
    const addCategoryButton = document.createElement('div');
    addCategoryButton.className = 'add-category-btn';
    addCategoryButton.innerHTML = `<button class="add-btn">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2</button>`;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    addCategoryButton.querySelector('button').addEventListener('click', function() {
        showAddCategoryForm('sub2', mainCategory, subCategory1);
    });
    
    container.appendChild(addCategoryButton);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
async function toggleCategoryLock(mainCategory, subCategory1, subCategory2, shouldLock) {
    try {
        console.log(`${shouldLock ? '‡∏•‡πá‡∏≠‡∏Å' : '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å'}‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:`, mainCategory, '>', subCategory1, '>', subCategory2);
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÉ‡∏ô Database
        const { error } = await supabaseClient
            .from('categories')
            .update({ is_locked: shouldLock })
            .eq('name', subCategory2)
            .eq('level', 3)
            .eq('parent_name', `${mainCategory} > ${subCategory1}`);
        
        if (error) {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        await loadCategories();
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        renderCategoryTree();
        updateCategoryUI();
        
        console.log(`${shouldLock ? '‡∏•‡πá‡∏≠‡∏Å' : '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å'}‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
        
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Å:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô showAddCategoryForm ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà
function showAddCategoryForm(type, parent = null, grandparent = null) {
    // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
    if (window.event) {
        window.event.stopPropagation();
    }
    
    console.log("‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", type, parent, grandparent);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const formContainer = document.getElementById('category-form-container');
    if (!formContainer) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 'category-form-container'");
        return;
    }
    
    let inputLabel = '';
    let titleText = '';
    
    switch (type) {
        case 'main':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å';
            titleText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å';
            break;
        case 'sub1':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1';
            titleText = `‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 (‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ ${parent})`;
            break;
        case 'sub2':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2';
            titleText = `‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 (‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ ${parent} > ${grandparent})`;
            break;
    }
    
    // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á formContainer
    formContainer.innerHTML = '';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á elements ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤
    const formBody = document.createElement('div');
    formBody.className = 'form-body';
    
    formBody.innerHTML = `
        <div class="form-header">
            <h3>${titleText}</h3>
            <button type="button" class="close-btn" id="close-category-form">√ó</button>
        </div>
        <div class="form-group">
            <label for="category-name">${inputLabel}:</label>
            <input type="text" id="category-name" class="form-input" placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà">
        </div>
        <div class="form-actions">
            <button type="button" class="save-btn" id="save-category-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
            <button type="button" class="cancel-btn" id="cancel-category-btn">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>
    `;
    
    formContainer.appendChild(formBody);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
    formContainer.style.display = 'flex';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà elements ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô DOM
    document.getElementById('close-category-form').onclick = function() {
        closeAddCategoryForm();
    };
    
    document.getElementById('cancel-category-btn').onclick = function() {
        closeAddCategoryForm();
    };
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    document.getElementById('save-category-btn').onclick = function() {
        addCategory(type, parent, grandparent);
    };
    
    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á input
    document.getElementById('category-name').addEventListener('keyup', function(event) {
        if (event.key === 'Enter') {
            addCategory(type, parent, grandparent);
        }
    });
    
    // ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà input
    setTimeout(() => {
        const input = document.getElementById('category-name');
        if (input) input.focus();
    }, 100);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô showAddCategoryForm ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateCategory

function showEditCategoryForm(type, category, parent = null, grandparent = null) {
    // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event
    if (window.event) {
        window.event.stopPropagation();
    }
    
    console.log("‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", type, category, parent, grandparent);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const formContainer = document.getElementById('category-form-container');
    if (!formContainer) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 'category-form-container'");
        return;
    }
    
    let inputLabel = '';
    let titleText = '';
    
    switch (type) {
        case 'main':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å';
            titleText = `‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å "${category}"`;
            break;
        case 'sub1':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1';
            titleText = `‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 "${category}" (‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ ${parent})`;
            break;
        case 'sub2':
            inputLabel = '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2';
            titleText = `‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 "${category}" (‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ ${parent} > ${grandparent})`;
            break;
    }
    
    // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á formContainer
    formContainer.innerHTML = '';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á elements ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤
    const formBody = document.createElement('div');
    formBody.className = 'form-body';
    
    formBody.innerHTML = `
        <div class="form-header">
            <h3>${titleText}</h3>
            <button type="button" class="close-btn" id="close-category-form">√ó</button>
        </div>
        <div class="form-group">
            <label for="category-name">${inputLabel}:</label>
            <input type="text" id="category-name" class="form-input" value="${category}" placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà">
        </div>
        <div class="form-actions">
            <button type="button" class="save-btn" id="save-category-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
            <button type="button" class="cancel-btn" id="cancel-category-btn">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>
    `;
    
    formContainer.appendChild(formBody);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
    formContainer.style.display = 'flex';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà elements ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô DOM
    document.getElementById('close-category-form').onclick = function() {
        closeAddCategoryForm();
    };
    
    document.getElementById('cancel-category-btn').onclick = function() {
        closeAddCategoryForm();
    };
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    document.getElementById('save-category-btn').onclick = function() {
        updateCategory(type, category, parent, grandparent);
    };
    
    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á input
    document.getElementById('category-name').addEventListener('keyup', function(event) {
        if (event.key === 'Enter') {
            updateCategory(type, category, parent, grandparent);
        }
    });
    
    // ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà input
    setTimeout(() => {
        const input = document.getElementById('category-name');
        if (input) input.focus();
    }, 100);
}

function closeAddCategoryForm() {
    const formContainer = document.getElementById('category-form-container');
    if (formContainer) {
        formContainer.innerHTML = '';
        formContainer.style.display = 'none';
    }
}
async function updateCategory(type, oldName, mainCategory = null, subCategory1 = null) {
    const newName = document.getElementById('category-name').value.trim();
    
    if (!newName) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà');
        return;
    }
    
    if (oldName === newName) {
        closeAddCategoryForm();
        return;
    }
    
    try {
        switch (type) {
            case 'main':
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingMain } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', newName)
                    .eq('level', 1);
                
                if (existingMain && existingMain.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return;
                }
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
                await supabaseClient
                    .from('categories')
                    .update({ name: newName })
                    .eq('name', oldName)
                    .eq('level', 1);
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï parent_name ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                await supabaseClient
                    .from('categories')
                    .update({ parent_name: newName })
                    .eq('parent_name', oldName)
                    .eq('level', 2);
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï parent_name ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                const { data: sub2Categories } = await supabaseClient
                    .from('categories')
                    .select('*')
                    .like('parent_name', `${oldName} > %`)
                    .eq('level', 3);
                
                if (sub2Categories) {
                    for (const sub2 of sub2Categories) {
                        const newParentName = sub2.parent_name.replace(oldName, newName);
                        await supabaseClient
                            .from('categories')
                            .update({ parent_name: newParentName })
                            .eq('id', sub2.id);
                    }
                }
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
                await supabaseClient
                    .from('questions')
                    .update({ category_main: newName })
                    .eq('category_main', oldName);
                break;
                
            case 'sub1':
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingSub1 } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', newName)
                    .eq('level', 2)
                    .eq('parent_name', mainCategory);
                
                if (existingSub1 && existingSub1.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return;
                }
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                await supabaseClient
                    .from('categories')
                    .update({ name: newName })
                    .eq('name', oldName)
                    .eq('level', 2)
                    .eq('parent_name', mainCategory);
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï parent_name ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                const oldParentPath = `${mainCategory} > ${oldName}`;
                const newParentPath = `${mainCategory} > ${newName}`;
                
                await supabaseClient
                    .from('categories')
                    .update({ parent_name: newParentPath })
                    .eq('parent_name', oldParentPath)
                    .eq('level', 3);
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
                await supabaseClient
                    .from('questions')
                    .update({ category_sub1: newName })
                    .eq('category_main', mainCategory)
                    .eq('category_sub1', oldName);
                break;
                
            case 'sub2':
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                const { data: existingSub2 } = await supabaseClient
                    .from('categories')
                    .select('id')
                    .eq('name', newName)
                    .eq('level', 3)
                    .eq('parent_name', `${mainCategory} > ${subCategory1}`);
                
                if (existingSub2 && existingSub2.length > 0) {
                    alert('‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
                    return;
                }
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                await supabaseClient
                    .from('categories')
                    .update({ name: newName })
                    .eq('name', oldName)
                    .eq('level', 3)
                    .eq('parent_name', `${mainCategory} > ${subCategory1}`);
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
                await supabaseClient
                    .from('questions')
                    .update({ category_sub2: newName })
                    .eq('category_main', mainCategory)
                    .eq('category_sub1', subCategory1)
                    .eq('category_sub2', oldName);
                break;
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        await loadCategories();
        await loadQuestions();
        
        // ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°
        closeAddCategoryForm();
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        renderCategoryTree();
        updateCategoryUI();
        displayQuestions();
        
        alert('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
        
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
    }
}

// ‡∏ô‡∏≥‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô confirmDeleteCategory() ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function confirmDeleteCategory(type, categoryName, mainCategory = null, subCategory1 = null) {
    // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£ propagation ‡∏Ç‡∏≠‡∏á event click ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å toggle
    if (event) {
        event.preventDefault();
        event.stopPropagation();
    }
    
    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö
    let affectedQuestions = 0;
    
    switch (type) {
        case 'main':
            // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ô‡∏µ‡πâ
            affectedQuestions = questions.filter(q => 
                q.category && q.category.main === categoryName
            ).length;
            break;
            
        case 'sub1':
            // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏ô‡∏µ‡πâ
            affectedQuestions = questions.filter(q => 
                q.category && 
                q.category.main === mainCategory && 
                q.category.sub1 === categoryName
            ).length;
            break;
            
        case 'sub2':
            // ‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ô‡∏µ‡πâ
            affectedQuestions = questions.filter(q => 
                q.category && 
                q.category.main === mainCategory && 
                q.category.sub1 === subCategory1 && 
                q.category.sub2 === categoryName
            ).length;
            break;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    const confirmContainer = document.getElementById('category-confirm-container');
    if (!confirmContainer) return;
    
    let title = '';
    let message = '';
    
    switch (type) {
        case 'main':
            title = '‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å';
            message = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å "${categoryName}"? ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏à‡∏∞‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏î‡πâ‡∏ß‡∏¢`;
            break;
        case 'sub1':
            title = '‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1';
            message = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 "${categoryName}"? ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1 ‡∏à‡∏∞‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏î‡πâ‡∏ß‡∏¢`;
            break;
        case 'sub2':
            title = '‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2';
            message = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 "${categoryName}"?`;
            break;
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö
    if (affectedQuestions > 0) {
        message += `<br><br><strong class="warning-text">‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</strong> ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${affectedQuestions} ‡∏Ç‡πâ‡∏≠ ‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢`;
    }
    
    confirmContainer.innerHTML = `
    <div class="confirm-dialog">
        <div class="confirm-header">
            <h3>${title}</h3>
            <button class="close-btn" onclick="closeConfirmDeleteDialog()">√ó</button>
        </div>
        <div class="confirm-body">
            <p>${message}</p>
        </div>
        <div class="confirm-actions">
            <button class="delete-btn" onclick="deleteCategory('${type}', '${categoryName}', '${mainCategory || ''}', '${subCategory1 || ''}')">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</button>
            <button class="cancel-btn" onclick="closeConfirmDeleteDialog()">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>
    </div>
`;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    confirmContainer.style.display = 'flex';
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô confirmDeleteCategory()
function closeConfirmDeleteDialog() {
    const confirmContainer = document.getElementById('category-confirm-container');
    if (confirmContainer) {
        confirmContainer.innerHTML = '';
        confirmContainer.style.display = 'none';
    }
}

async function deleteCategory(type, categoryName, mainCategory = null, subCategory1 = null) {
    try {
        switch (type) {
            case 'main':
                // ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
                await supabaseClient
                    .from('categories')
                    .delete()
                    .or(`parent_name.eq.${categoryName},parent_name.like.${categoryName} > %`);
                
                // ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
                await supabaseClient
                    .from('categories')
                    .delete()
                    .eq('name', categoryName)
                    .eq('level', 1);
                
                // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
                await supabaseClient
                    .from('questions')
                    .delete()
                    .eq('category_main', categoryName);
                break;
                
            case 'sub1':
                // ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
                const parentPath = `${mainCategory} > ${categoryName}`;
                await supabaseClient
                    .from('categories')
                    .delete()
                    .eq('level', 3)
                    .eq('parent_name', parentPath);
                
                // ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                await supabaseClient
                    .from('categories')
                    .delete()
                    .eq('name', categoryName)
                    .eq('level', 2)
                    .eq('parent_name', mainCategory);
                
                // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
                await supabaseClient
                    .from('questions')
                    .delete()
                    .eq('category_main', mainCategory)
                    .eq('category_sub1', categoryName);
                break;
                
            case 'sub2':
                // ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                await supabaseClient
                    .from('categories')
                    .delete()
                    .eq('name', categoryName)
                    .eq('level', 3)
                    .eq('parent_name', `${mainCategory} > ${subCategory1}`);
                
                // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
                await supabaseClient
                    .from('questions')
                    .delete()
                    .eq('category_main', mainCategory)
                    .eq('category_sub1', subCategory1)
                    .eq('category_sub2', categoryName);
                break;
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        await loadCategories();
        await loadQuestions();
        
        // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        closeConfirmDeleteDialog();
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        renderCategoryTree();
        updateCategoryUI();
        displayQuestions();
        
        alert('‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
        
        return true;
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
async function initCategorySystemNew() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...");
    
    try {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å Database
        await loadCategories();
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        if (Object.keys(categories).length === 0) {
            console.log("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...");
            await createSampleCategories();
            await loadCategories();
        }
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á UI
        renderCategoryTree();
        updateCategorySelects();
        
        console.log("‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
        
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
        // ‡πÉ‡∏ä‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        categories = {
            "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ": {
                "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå": ["‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå"],
                "‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå": ["‡∏û‡∏µ‡∏ä‡∏Ñ‡∏ì‡∏¥‡∏ï"]
            }
        };
        renderCategoryTree();
        updateCategorySelects();
    }
}

async function createSampleCategories() {
    try {
        const sampleCategories = [
            // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
            { name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", level: 1, parent_name: null },
            { name: "‡∏†‡∏≤‡∏©‡∏≤", level: 1, parent_name: null },
            
            // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
            { name: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", level: 2, parent_name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ" },
            { name: "‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", level: 2, parent_name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ" },
            { name: "‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©", level: 2, parent_name: "‡∏†‡∏≤‡∏©‡∏≤" },
            
            // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
            { name: "‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå", level: 3, parent_name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ > ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" },
            { name: "‡πÄ‡∏Ñ‡∏°‡∏µ", level: 3, parent_name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ > ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" },
            { name: "‡∏û‡∏µ‡∏ä‡∏Ñ‡∏ì‡∏¥‡∏ï", level: 3, parent_name: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ > ‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" },
            { name: "‡πÑ‡∏ß‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå", level: 3, parent_name: "‡∏†‡∏≤‡∏©‡∏≤ > ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" }
        ];
        
        const { error } = await supabaseClient
            .from('categories')
            .insert(sampleCategories);
        
        if (error) {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
        }
        
        console.log("‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        return true;
        
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:", error);
        return false;
    }
}

async function migrateCategoriesFromLocalStorage() {
    try {
        const savedCategories = localStorage.getItem('quiz-categories');
        if (!savedCategories) {
            return false;
        }
        
        const oldCategories = JSON.parse(savedCategories);
        if (Object.keys(oldCategories).length === 0) {
            return false;
        }
        
        console.log('‡∏Å‡∏≥‡∏•‡∏±‡∏á migrate ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...');
        
        const categoriesToInsert = [];
        
        for (const mainCategory in oldCategories) {
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å
            categoriesToInsert.push({
                name: mainCategory,
                level: 1,
                parent_name: null
            });
            
            for (const subCategory1 in oldCategories[mainCategory]) {
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 1
                categoriesToInsert.push({
                    name: subCategory1,
                    level: 2,
                    parent_name: mainCategory
                });
                
                for (const subCategory2 of oldCategories[mainCategory][subCategory1]) {
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2
                    categoriesToInsert.push({
                        name: subCategory2,
                        level: 3,
                        parent_name: `${mainCategory} > ${subCategory1}`
                    });
                }
            }
        }
        
        const { error } = await supabaseClient
            .from('categories')
            .insert(categoriesToInsert);
        
        if (error) {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
        }
        
        console.log('Migrate ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        localStorage.removeItem('quiz-categories');
        
        return true;
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ migrate:', error);
        return false;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
function showGameDetails(historyId) {
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô ID:", historyId);
    
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    const historyEntry = gameHistory.find(entry => entry.id === historyId);
    if (!historyEntry) {
        alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!historyEntry.gameData || !historyEntry.gameData.questions) {
        alert('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå (‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ)');
        return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal
    createGameDetailsModal(historyEntry);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
function createGameDetailsModal(historyEntry) {
    // ‡∏•‡∏ö Modal ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingModal = document.getElementById('game-details-modal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal ‡πÉ‡∏´‡∏°‡πà
    const modal = document.createElement('div');
    modal.id = 'game-details-modal';
    modal.className = 'game-details-modal-overlay';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ Modal
    const modalContent = createModalContent(historyEntry);
    modal.appendChild(modalContent);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô DOM
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î Modal
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeGameDetailsModal();
        }
    });
    
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô scroll ‡∏Ç‡∏≠‡∏á body
    document.body.style.overflow = 'hidden';
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ Modal
function createModalContent(historyEntry) {
    const { gameData, playerName, score, totalQuestions, percentage, category, playedAt } = historyEntry;
    const { questions, userAnswers, randomOrder } = gameData;
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
const dateTimeFormatted = formatDateTime24Hour(playedAt);
const formattedDate = dateTimeFormatted.date;
const formattedTime = dateTimeFormatted.time;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á container ‡∏´‡∏•‡∏±‡∏Å
    const container = document.createElement('div');
    container.className = 'game-details-modal';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á header
    const header = document.createElement('div');
    header.className = 'modal-header';
    header.innerHTML = `
        <div class="modal-title">
            <h2>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°</h2>
            <button class="modal-close-btn" onclick="closeGameDetailsModal()">√ó</button>
        </div>
        <div class="player-result-header">
            <div class="player-result-avatar">${getPlayerInitials(playerName)}</div>
            <div class="player-result-info">
                <div class="player-result-name">${playerName}</div>
                <div class="play-datetime">${formattedDate} ${formattedTime}</div>
            </div>
        </div>
    `;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    const scoreSection = document.createElement('div');
    scoreSection.className = 'modal-score-section';
    scoreSection.innerHTML = `
        <div class="result-score-container">
            <div class="result-score">
                <div class="score-display">
                    <div class="score-value">${score}</div>
                    <div class="score-separator">/</div>
                    <div class="score-max">${totalQuestions}</div>
                </div>
                <div class="score-percent">${percentage}%</div>
            </div>
        </div>
        
        <div class="quiz-stats">
            <div class="stat-item">
                <div class="stat-value correct-value">${score}</div>
                <div class="stat-label">‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å</div>
            </div>
            <div class="stat-item">
                <div class="stat-value incorrect-value">${totalQuestions - score}</div>
                <div class="stat-label">‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î</div>
            </div>
            <div class="stat-item">
                <div class="stat-value">${totalQuestions}</div>
                <div class="stat-label">‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
            </div>
        </div>
    `;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categorySection = document.createElement('div');
    if (category) {
        categorySection.className = 'category-summary';
        categorySection.innerHTML = `
            <div class="category-title">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</div>
            <div class="category-path">${category.main || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > ${category.sub1 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} > ${category.sub2 || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</div>
        `;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    const reviewSection = document.createElement('div');
    reviewSection.className = 'modal-review-section';
    reviewSection.innerHTML = '<h3>‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö</h3>';
    
    const questionsList = document.createElement('div');
    questionsList.className = 'question-review-list';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    randomOrder.forEach((questionIndex, index) => {
        const question = questions[questionIndex];
        const userAnswer = userAnswers[questionIndex] || '';
        const isCorrect = userAnswer === question.correctAnswer;
        
        const reviewItem = document.createElement('div');
        reviewItem.className = `question-review-item ${isCorrect ? 'correct' : 'incorrect'}`;
        
        let choicesHTML = '';
        question.choices.forEach(choice => {
            const isUserSelected = choice.id === userAnswer;
            const isCorrectAnswer = choice.id === question.correctAnswer;
            
            let className = 'choice-item';
            if (isUserSelected) className += ' user-selected';
            if (isCorrectAnswer) className += ' correct-answer';
            
            let icon = '';
            if (isUserSelected && isCorrectAnswer) {
                icon = '<span class="choice-icon correct-icon">‚úì</span>';
            } else if (isUserSelected && !isCorrectAnswer) {
                icon = '<span class="choice-icon incorrect-icon">‚úó</span>';
            } else if (!isUserSelected && isCorrectAnswer) {
                icon = '<span class="choice-icon correct-icon">‚úì</span>';
            }
            
            choicesHTML += `
                <div class="${className}">
                    <span class="choice-marker">${choice.id}</span>
                    <span class="choice-text">${choice.text}</span>
                    ${icon}
                </div>
            `;
        });
        
        reviewItem.innerHTML = `
            <div class="question-number">
                <span>‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${index + 1}</span>
                <span class="question-status ${isCorrect ? 'status-correct' : 'status-incorrect'}">
                    ${isCorrect ? '‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å' : '‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î'}
                </span>
            </div>
            <div class="question-text">${question.text}</div>
            ${question.image ? `<img src="${question.image}" class="question-image">` : ''}
            <div class="choice-list">
                ${choicesHTML}
            </div>
        `;
        
        questionsList.appendChild(reviewItem);
    });
    
    reviewSection.appendChild(questionsList);
    
    // ‡∏£‡∏ß‡∏° elements ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    container.appendChild(header);
    container.appendChild(scoreSection);
    if (category) container.appendChild(categorySection);
    container.appendChild(reviewSection);
    
    return container;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal
function closeGameDetailsModal() {
    const modal = document.getElementById('game-details-modal');
    if (modal) {
        modal.remove();
    }
    
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ scroll ‡∏Ç‡∏≠‡∏á body
    document.body.style.overflow = '';
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà
function initAdminSystem() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô...");
    
    // *** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á Auth State Listener ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ***
    // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    updateAdminTabs();
    
    console.log("‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function canPlayerAccessCategory(mainCategory, subCategory1, subCategory2) {
    // Admin ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    if (isAdminMode && adminProfile) {
        return true;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏¢‡πà‡∏≠‡∏¢ 2 ‡∏ñ‡∏π‡∏Å‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    return !isCategoryLocked(mainCategory, subCategory1, subCategory2);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
function handleAdminKeyInput(event) {
    // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ F10 ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà
function activateAdminMode() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô...");
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ó‡πá‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    updateAdminTabs();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Admin UI
    addAdminUI();
        
    console.log("‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà
function deactivateAdminMode() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô...");
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    updateAdminTabs();
    
    // ‡∏•‡∏ö Admin UI
    removeAdminUI();
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    currentPlayer = null;
    
    // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    const playTab = document.getElementById('play-tab');
    if (playTab && !playTab.classList.contains('active')) {
        playTab.click();
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà
    setTimeout(() => {
        updateLoginDisplay();
    }, 100);
    
    console.log("‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° Admin UI - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
function addAdminUI() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ UI ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (document.getElementById('admin-ui-container')) {
        console.log("Admin UI ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");
        return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin UI
    const adminContainer = document.createElement('div');
    adminContainer.id = 'admin-ui-container';
    adminContainer.className = 'admin-ui-container';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Admin Mode Badge (‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
    const adminBadge = document.createElement('div');
    adminBadge.className = 'admin-mode-indicator';
    adminBadge.innerHTML = 'üëë Admin Mode';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö (‡∏Å‡∏î‡πÑ‡∏î‡πâ)
    const logoutBtn = document.createElement('button');
    logoutBtn.className = 'admin-logout-btn';
    logoutBtn.innerHTML = 'üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö';
    logoutBtn.onclick = function() {
        if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
            logoutAdmin();
        }
    };
    
    // ‡∏£‡∏ß‡∏° elements
    adminContainer.appendChild(adminBadge);
    adminContainer.appendChild(logoutBtn);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    document.body.appendChild(adminContainer);
    
    console.log("‡πÄ‡∏û‡∏¥‡πà‡∏° Admin UI ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö Admin UI - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
function removeAdminUI() {
    const adminContainer = document.getElementById('admin-ui-container');
    if (adminContainer) {
        adminContainer.remove();
        console.log("‡∏•‡∏ö Admin UI ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    }
}

// ‡∏ß‡∏≤‡∏á‡πÅ‡∏ó‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateAdminTabs() ‡πÄ‡∏î‡∏¥‡∏°
function updateAdminTabs() {
    const historyTab = document.getElementById('history-tab');
    const createTab = document.getElementById('create-tab');
    
    if (userMode === 'admin' || isAdminMode) {
        // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô: ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å‡πÅ‡∏ó‡πá‡∏ö
        if (historyTab) {
            historyTab.style.display = 'block';
            historyTab.textContent = '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô (Admin)';
        }
        if (createTab) {
            createTab.style.display = 'block';
        }
    } else {
        // ‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        if (historyTab) {
            historyTab.style.display = 'block';
            historyTab.textContent = '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô';
        }
        if (createTab) {
            createTab.style.display = 'none';
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
function getPlayerHistory() {
    if (!currentPlayer) {
        return [];
    }
    
    if (isAdminMode) {
        // ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏´‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        return gameHistory;
    } else {
        // ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
        return gameHistory.filter(entry => 
            entry.playerName === currentPlayer.name
        );
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å Admin)
function displayPlayerHistory() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô...");
    
    const historyContainer = document.getElementById('history-container');
    
    if (!historyContainer) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'history-container'");
        return false;
    }
    
    // ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    const playerHistoryData = getPlayerHistory();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
    const totalHistoryCount = document.getElementById('total-history-count');
    if (totalHistoryCount) {
        totalHistoryCount.textContent = ` ${playerHistoryData.length}`;
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    toggleHistoryAdminFeatures();
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    if (playerHistoryData.length === 0) {
        historyContainer.innerHTML = `
            <div class="empty-state">
                <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô</p>
                <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥!</p>
            </div>
        `;
        
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏à‡πÄ‡∏ô‡∏ä‡∏±‡πà‡∏ô
        const paginationElement = document.getElementById('history-pagination');
        const perPageElement = document.getElementById('history-items-per-page');
        
        if (paginationElement) paginationElement.style.display = 'none';
        if (perPageElement) perPageElement.style.display = 'none';
        
        return true;
    }
    
    // ‡πÉ‡∏ä‡πâ filteredHistory ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö pagination ‡πÄ‡∏î‡∏¥‡∏°
    filteredHistory = [...playerHistoryData];
    currentHistoryPage = 1;
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏î‡∏¥‡∏°
    displayGameHistory();
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß:", playerHistoryData.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏° User Type - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô
function updateHistoryPageHeader() {
    const historySection = document.querySelector('.history-section .section-header .section-title');
    
    if (historySection) {
        if (isAdminMode && adminProfile) {
            historySection.textContent = '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - Admin Mode)';
            console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô");
        } else {
            const playerName = currentPlayer ? currentPlayer.name : '‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô';
            historySection.textContent = `‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏Ç‡∏≠‡∏á ${playerName}`;
            console.log("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:", playerName);
        }
    } else {
        console.warn("‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥");
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô - ‡∏û‡∏£‡πâ‡∏≠‡∏° debug
function displayAdminHistory() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)...");
    
    // **Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**
    console.log("Debug gameHistory:", gameHistory.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    console.log("Debug gameHistory sample:", gameHistory.slice(0, 2));
    
    const historyContainer = document.getElementById('history-container');
    
    if (!historyContainer) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö element 'history-container'");
        return false;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á, ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö)
    toggleHistoryAdminFeatures();
    
    // **‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ**
    if (!Array.isArray(gameHistory)) {
        console.error("gameHistory ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà array:", typeof gameHistory);
        gameHistory = [];
    }
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    filteredHistory = [...gameHistory];
    currentHistoryPage = 1;
    
    console.log("Admin ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", filteredHistory.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    console.log("filteredHistory sample:", filteredHistory.slice(0, 2));
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const totalHistoryCount = document.getElementById('total-history-count');
    if (totalHistoryCount) {
        totalHistoryCount.textContent = ` ${filteredHistory.length}`;
    }
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏î‡∏¥‡∏°
    displayGameHistory();
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß:", filteredHistory.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    return true;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô
function toggleHistoryAdminFeatures() {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö", isAdminMode ? "Admin" : "Player");
    
    // ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
    const filterSection = document.querySelector('.history-filter-section');
    if (filterSection) {
        if (isAdminMode && adminProfile) {
            filterSection.style.display = 'block';
            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin");
        } else {
            filterSection.style.display = 'none';
            console.log("‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Player");
        }
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const clearAllBtn = document.getElementById('clear-all-history');
    if (clearAllBtn) {
        if (isAdminMode && adminProfile) {
            clearAllBtn.style.display = 'inline-block';
            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin");
        } else {
            clearAllBtn.style.display = 'none';
            console.log("‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Player");
        }
    }
    
    // ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const deleteButtons = document.querySelectorAll('.delete-history-btn');
    deleteButtons.forEach(btn => {
        if (isAdminMode && adminProfile) {
            btn.style.display = 'inline-block';
        } else {
            btn.style.display = 'none';
        }
    });
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
    const itemsPerPageContainer = document.getElementById('history-items-per-page');
    if (itemsPerPageContainer) {
        if (isAdminMode && adminProfile) {
            itemsPerPageContainer.style.display = 'flex';
            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin");
        } else {
            // ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            historyItemsPerPage = 10;
            itemsPerPageContainer.style.display = 'none';
            console.log("‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Player ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô 10");
        }
    }
    
    console.log("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Debug ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Admin (‡πÉ‡∏ä‡πâ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤)
function debugAdminStatus() {
    console.log("=== Debug Admin Status ===");
    console.log("isAdminMode:", isAdminMode);
    console.log("adminProfile:", adminProfile);
    console.log("currentUser:", currentUser);
    console.log("currentPlayer:", currentPlayer);
    console.log("========================");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
function forcePlayerMode() {
    if (!adminProfile) { // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á
        isAdminMode = false;
        currentUser = null;
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ó‡πá‡∏ö
        updateAdminTabs();
        
        // ‡∏•‡∏ö Admin UI (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        removeAdminUI();
        
        console.log("‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤");
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Admin ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
function startAdminStatusMonitor() {
    setInterval(() => {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ adminProfile ‡πÅ‡∏ï‡πà isAdminMode ‡πÄ‡∏õ‡πá‡∏ô true = ‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥
        if (isAdminMode && !adminProfile) {
            console.warn("‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥: isAdminMode=true ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ adminProfile");
            forcePlayerMode();
        }
        
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ currentPlayer ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÅ‡∏ï‡πà isAdminMode ‡πÄ‡∏õ‡πá‡∏ô true = ‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥
        if (currentPlayer && !adminProfile && isAdminMode) {
            console.warn("‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥: ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô Admin");
            forcePlayerMode();
        }
        
        // *** ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå admin session ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ***
        if (currentPlayer && !isAdminMode) {
            forceAdminLogoutForPlayer();
        }
    }, 3000); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‡∏•‡∏î‡∏à‡∏≤‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå admin ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
async function forceAdminLogoutForPlayer() {
    if (currentPlayer && !isAdminMode) {
        try {
            console.log("üîÑ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå admin session ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô");
            await supabaseClient.auth.signOut();
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô admin
            isAdminMode = false;
            currentUser = null;
            adminProfile = null;
            
            console.log("‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå admin session ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        } catch (error) {
            console.log("‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ admin session ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå");
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
function showAdminNotification(message) {
    // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingNotification = document.getElementById('admin-notification');
    if (existingNotification) {
        existingNotification.remove();
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
    const notification = document.createElement('div');
    notification.id = 'admin-notification';
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: linear-gradient(45deg, #4caf50, #81c784);
        color: white;
        padding: 12px 24px;
        border-radius: 25px;
        font-weight: 600;
        font-size: 16px;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
        z-index: 10001;
        animation: slideDown 0.3s ease;
    `;
    notification.textContent = message;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    document.body.appendChild(notification);
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    setTimeout(() => {
        if (notification && notification.parentNode) {
            notification.style.animation = 'slideDown 0.3s ease reverse';
            setTimeout(() => {
                notification.remove();
            }, 300);
        }
    }, 3000);
    
    console.log("‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:", message);
}

function formatDateTime24Hour(dateString) {
    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô UTC ‡πÇ‡∏î‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏° Z ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
    let utcDateString = dateString;
    if (!dateString.endsWith('Z') && !dateString.includes('+')) {
        utcDateString = dateString + 'Z';
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Date object (‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏á UTC ‡πÄ‡∏õ‡πá‡∏ô local time)
    const date = new Date(utcDateString);
    
    if (isNaN(date.getTime())) {
        return { date: 'Invalid Date', time: 'Invalid Time', full: 'Invalid Date' };
    }
    
    // ‡πÉ‡∏ä‡πâ getHours(), getMinutes() (‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏ß‡∏•‡∏≤ local ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    
    return {
        date: `${day}/${month}/${year}`,
        time: `${hours}:${minutes}`,
        full: `${day}/${month}/${year} ${hours}:${minutes}`
    };
}

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
let userMode = null; // 'guest', 'user', 'admin'

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
function selectWelcomeOption(option) {
  console.log('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:', option);
  
  switch(option) {
    case 'guest':
      showGuestForm();
      break;
    case 'login':
      showLoginForm();
      break;
    case 'register':
      showRegisterForm();
      break;
  }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô Guest
function showGuestForm() {
  document.getElementById('guest-name-form').classList.remove('hidden');
  setTimeout(() => {
    document.getElementById('guest-name-input').focus();
  }, 100);
}

// ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏° Guest
function closeGuestForm() {
  document.getElementById('guest-name-form').classList.add('hidden');
  document.getElementById('guest-name-input').value = '';
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏°‡∏î Guest
function startGuestMode() {
  const guestName = document.getElementById('guest-name-input').value.trim();
  
  if (!guestName) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô');
    return;
  }
  
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏´‡∏°‡∏î Guest
  userMode = 'guest';
  currentPlayer = {
    name: guestName,
    mode: 'guest',
    loginTime: new Date().toISOString()
  };
  
  console.log('‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏°‡∏î Guest:', currentPlayer);
  
  // ‡∏õ‡∏¥‡∏î Modal ‡∏Å‡πà‡∏≠‡∏ô
  closeGuestForm();
  
  // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
  hideWelcomeScreen();
  
  // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  startGameAfterLogin();
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
async function showLoginForm() {
    // *** ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö session ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô ***
    const hasExistingSession = await checkExistingSession();
    
    if (hasExistingSession) {
        // ‡∏°‡∏µ session ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
        console.log("‡πÉ‡∏ä‡πâ session ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");
        return;
    }
    
    // ‡πÑ‡∏°‡πà‡∏°‡∏µ session ‡∏´‡∏£‡∏∑‡∏≠ session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    document.getElementById('user-login-form').classList.remove('hidden');
    setTimeout(() => {
        document.getElementById('login-email').focus();
    }, 100);
}

// ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
function closeLoginForm() {
  document.getElementById('user-login-form').classList.add('hidden');
  clearLoginForm();
}

// ‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
function clearLoginForm() {
  document.getElementById('login-email').value = '';
  document.getElementById('login-password').value = '';
  document.getElementById('login-error').classList.add('hidden');
}

// ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
async function performUserLogin() {
  const email = document.getElementById('login-email').value.trim();
  const password = document.getElementById('login-password').value.trim();
  const errorDiv = document.getElementById('login-error');
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!email || !password) {
    showError('login-error', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
    return;
  }
  
  try {
    // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô Supabase
    const { data, error } = await supabaseClient.auth.signInWithPassword({
      email: email,
      password: password
    });
    
    if (error) {
      throw error;
    }
    
    console.log('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data.user);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const adminData = await checkIsAdmin(data.user.id);
    
    if (adminData) {
      // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      userMode = 'admin';
      isAdminMode = true;
      adminProfile = adminData;
      currentUser = data.user;
      currentPlayer = {
        name: adminData.name || 'Admin',
        mode: 'admin',
        userId: data.user.id,
        loginTime: new Date().toISOString()
      };
      
      activateAdminMode();
    } else {
      // ‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
      userMode = 'user';
      currentUser = data.user;
      currentPlayer = {
        name: data.user.user_metadata?.display_name || data.user.email.split('@')[0],
        mode: 'user',
        userId: data.user.id,
        loginTime: new Date().toISOString()
      };
    }
    
    // ‡∏õ‡∏¥‡∏î Modal ‡∏Å‡πà‡∏≠‡∏ô
    closeLoginForm();
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    hideWelcomeScreen();
    
    // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    startGameAfterLogin();
    
  } catch (error) {
    console.error('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
    showError('login-error', '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö session ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Login)
async function checkExistingSession() {
    try {
        const { data: { session } } = await supabaseClient.auth.getSession();
        
        if (session && session.user) {
            console.log("‡∏û‡∏ö session ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà:", session.user.email);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            const adminData = await checkIsAdmin(session.user.id);
            
            if (adminData) {
                // ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                userMode = 'admin';
                isAdminMode = true;
                adminProfile = adminData;
                currentUser = session.user;
                currentPlayer = {
                    name: adminData.name || 'Admin',
                    mode: 'admin',
                    userId: session.user.id,
                    loginTime: new Date().toISOString()
                };
                
                activateAdminMode();
                hideWelcomeScreenAndStart();
                return true;
            } else {
                // ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
                userMode = 'user';
                currentUser = session.user;
                currentPlayer = {
                    name: session.user.user_metadata?.display_name || session.user.email.split('@')[0],
                    mode: 'user',
                    userId: session.user.id,
                    loginTime: new Date().toISOString()
                };
                
                hideWelcomeScreenAndStart();
                return true;
            }
        }
        
        return false; // ‡πÑ‡∏°‡πà‡∏°‡∏µ session
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö session:', error);
        return false;
    }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function showRegisterForm() {
  document.getElementById('user-register-form').classList.remove('hidden');
  setTimeout(() => {
    document.getElementById('register-name').focus();
  }, 100);
}

// ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function closeRegisterForm() {
  document.getElementById('user-register-form').classList.add('hidden');
  clearRegisterForm();
}

// ‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function clearRegisterForm() {
  document.getElementById('register-name').value = '';
  document.getElementById('register-email').value = '';
  document.getElementById('register-password').value = '';
  document.getElementById('register-confirm-password').value = '';
  document.getElementById('accept-terms').checked = false;
  document.getElementById('register-error').classList.add('hidden');
}

// ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
async function performUserRegister() {
  const name = document.getElementById('register-name').value.trim();
  const email = document.getElementById('register-email').value.trim();
  const password = document.getElementById('register-password').value.trim();
  const confirmPassword = document.getElementById('register-confirm-password').value.trim();
  const acceptTerms = document.getElementById('accept-terms').checked;
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!name || !email || !password || !confirmPassword) {
    showError('register-error', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á');
    return;
  }
  
  if (password !== confirmPassword) {
    showError('register-error', '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô');
    return;
  }
  
  if (password.length < 6) {
    showError('register-error', '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
    return;
  }
  
  if (!acceptTerms) {
    showError('register-error', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    return;
  }
  
  try {
    // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ú‡πà‡∏≤‡∏ô Supabase
    const { data, error } = await supabaseClient.auth.signUp({
      email: email,
      password: password,
      options: {
        data: {
          display_name: name
        }
      }
    });
    
    if (error) {
      throw error;
    }
    
    console.log('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data.user);
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    userMode = 'user';
    currentUser = data.user;
    currentPlayer = {
      name: name,
      mode: 'user',
      userId: data.user.id,
      loginTime: new Date().toISOString()
    };
    
    alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö');
    
    // ‡∏õ‡∏¥‡∏î Modal ‡∏Å‡πà‡∏≠‡∏ô
    closeRegisterForm();
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    hideWelcomeScreen();
    
    // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    startGameAfterLogin();
    
  } catch (error) {
    console.error('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
    let errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å';
    
    if (error.message.includes('already registered')) {
      errorMessage = '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß';
    }
    
    showError('register-error', errorMessage);
  }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
function showError(elementId, message) {
  const errorDiv = document.getElementById(elementId);
  errorDiv.textContent = message;
  errorDiv.classList.remove('hidden');
}

// ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
function hideWelcomeScreen() {
  const welcomeScreen = document.getElementById('welcome-screen');
  if (welcomeScreen) {
    welcomeScreen.style.opacity = '0';
    setTimeout(() => {
      welcomeScreen.classList.add('hidden');
    }, 300);
  }
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
function startGameAfterLogin() {
  // ‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ login ‡πÄ‡∏î‡∏¥‡∏°
  const oldLoginScreen = document.getElementById('login-screen');
  if (oldLoginScreen) {
    oldLoginScreen.classList.add('hidden');
  }
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const startScreen = document.getElementById('start-screen');
  const categorySelection = document.getElementById('category-selection-container');
  
  if (startScreen) startScreen.classList.remove('hidden');
  if (categorySelection) categorySelection.classList.remove('hidden');
  
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î
  updateUIForUserMode();
  
  console.log('‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î:', userMode);
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI ‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function updateUIForUserMode() {
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏ó‡πá‡∏ö
  updateAdminTabs();
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô
  const quizContainer = document.querySelector('.container.quiz-player');
  if (quizContainer && currentPlayer) {
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    const existingInfo = quizContainer.querySelector('.player-info.top-right');
    if (existingInfo) existingInfo.remove();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    const playerInfo = document.createElement('div');
    playerInfo.className = 'player-info top-right';
    
    let modeIcon = '';
    switch(userMode) {
      case 'guest': modeIcon = 'üë§'; break;
      case 'user': modeIcon = 'üîë'; break;
      case 'admin': modeIcon = 'üëë'; break;
    }
    
    playerInfo.innerHTML = `
      <div class="player-name">${modeIcon} ${currentPlayer.name}</div>
    `;
    quizContainer.appendChild(playerInfo);
  }
}

// Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Enter key
document.addEventListener('DOMContentLoaded', function() {
  // Guest name input
  const guestInput = document.getElementById('guest-name-input');
  if (guestInput) {
    guestInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        startGuestMode();
      }
    });
  }
  
  // Login form
  const loginPassword = document.getElementById('login-password');
  if (loginPassword) {
    loginPassword.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        performUserLogin();
      }
    });
  }
  
  // Register form
  const registerConfirmPassword = document.getElementById('register-confirm-password');
  if (registerConfirmPassword) {
    registerConfirmPassword.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        performUserRegister();
      }
    });
  }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î
async function loadUserGameHistory() {
    if (userMode === 'guest') {
        // Guest: ‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        gameHistory = [];
        filteredHistory = [];
        console.log("‡πÇ‡∏´‡∏°‡∏î Guest: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡∏•‡πà‡∏≤");
    } else if (userMode === 'user' || userMode === 'admin') {
        // User/Admin: ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å Database
        await loadGameHistory();
        console.log("‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å Database:", gameHistory.length, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î
async function saveUserGameHistory(player, score, totalQuestions, category, percentage) {
    if (userMode === 'guest') {
        // Guest: ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        const historyEntry = {
            id: Date.now().toString(),
            playerName: player.name,
            score: score,
            totalQuestions: totalQuestions,
            percentage: percentage,
            category: category,
            playedAt: new Date().toISOString(),
            gameData: {
                questions: [...currentGameQuestions],
                userAnswers: {...userAnswers},
                randomOrder: [...randomQuestionOrder],
                choiceOrder: {...choiceOrderMap}
            }
        };
        
        gameHistory.unshift(historyEntry);
        filteredHistory = [...gameHistory];
        
        console.log("Guest: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥");
        return true;
    } else {
        // User/Admin: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Database
        return await addGameHistoryEntry(player, score, totalQuestions, category, percentage);
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
async function logout() {
    if (userMode === 'user' || userMode === 'admin') {
        // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Supabase Auth
        await supabaseClient.auth.signOut();
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    currentPlayer = null;
    currentUser = null;
    userMode = null;
    isAdminMode = false;
    adminProfile = null;
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    gameHistory = [];
    filteredHistory = [];
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UI
    removeAdminUI();
    updateAdminTabs();
    
    // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    location.reload();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå session ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function forceLogoutAllSessions() {
    try {
        console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå session ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...");
        
        // ‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏à‡∏≤‡∏Å Supabase
        await supabaseClient.auth.signOut();
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        currentPlayer = null;
        currentUser = null;
        userMode = null;
        isAdminMode = false;
        adminProfile = null;
        
        // ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        gameHistory = [];
        filteredHistory = [];
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UI
        removeAdminUI();
        updateAdminTabs();
        
        console.log("‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏ó‡∏∏‡∏Å session ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà
        showWelcomeScreen();
        
        return true;
        
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå:', error);
        return false;
    }
}
